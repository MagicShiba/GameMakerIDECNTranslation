_Language,English,Simplified Chinese,,Language name - in English
_LanguageNative,English,中文简体,,Language name in the native language
_LanguageCode,en,zh,,standard windows os language code this pack represents (can be primary code only ie. en or primary-secondary ie. en-GB)
GMStdSeqSetHead_Story_1,Set head position (in frames) of sequence instance ${sequenceelmid} to ${var},将序列实例${sequenceelmid}的头部位置(以帧为单位)设置为${var},,GML Visual story text
GMStdSeqGetHead_Story_1,Get head position (in frames) of sequence instance ${sequenceelmid} into ${var},将序列实例${sequenceelmid}的头部位置(以帧为单位)获取到${var},,GML Visual story text
GMStdSeqGetHead_Story_2,Get head position (in frames) of sequence instance ${sequenceelmid} into temp ${var},将序列实例${sequenceelmid}的头部位置(以帧为单位)获取到临时${var},,GML Visual story text
GMStdVar_Story_1,Set ${var} to ${expr}${show_input_count},设置变量 ${var} 为 ${expr} ${show_input_count} ,,GML Visual story text
GMStdVar_Story_2,Set ${var} to ${expr} on ${applyto}${show_input_count},设置 ${applyto} 的变量 ${var} 为 ${expr} ${show_input_count},,GML Visual story text
GMStdVar_Story_3,Add ${expr} to ${var}${show_input_count},令变量 ${var} 增加 ${expr} $[show_input_count],,GML Visual story text
GMStdVar_Story_4,Add ${expr} to ${var} on ${applyto}${show_input_count},令 ${applyto} 的变量 ${var} 增加 ${expr} ${show_input_count},,GML Visual story text
GMStdTempVar_Story_1,Declare temp ${var}${show_input_count},声明临时变量 ${var} ${show_input_count} ,,GML Visual story text
GMStdTempVar_Story_2,Declare temp ${var} on ${applyto}${show_input_count},在 ${applyto} 上声明临时 ${var} ${show_input_count},,GML Visual story text
GMStdTempVar_Story_3,Declare temp ${var} and set it to ${value}${show_input_count},声明临时变量 ${var} 并将其设置为 ${value} ${show_input_count} ,,GML Visual story text
GMStdTempVar_Story_4,Declare temp ${var} and set it to ${value} on ${applyto}${show_input_count},在 ${applyto} 上声明临时 ${var} 并将其设置为 ${value} ${show_input_count},,GML Visual story text
GMStdSetGlobal_Story_1,Set global variable ${var} to ${value}${show_input_count},设置全局变量 ${var} 为 ${value} ${show_input_count} ,,GML Visual story text
GMStdSetGlobal_Story_2,Set global variable ${var} to ${value} on ${applyto}${show_input_count},在 ${applyto} 上设置全局变量 ${var} 为 ${value} ${show_input_count},,GML Visual story text
GMStdSetGlobal_Story_3,Add ${value} to global variable ${var}${show_input_count},令全局变量 ${var} 增加 ${value} ${show_input_count} ,,GML Visual story text
GMStdSetGlobal_Story_4,Add ${value} to global variable ${var} on ${applyto}${show_input_count},在 ${applyto} 上令全局变量 ${var} 增加 ${value} ,,GML Visual story text
GMStdGetGlobal_Story_1,Get global variable ${var} into ${output}${show_input_count},获取全局变量 ${var} 存入 ${output} ${show_input_count} ,,GML Visual story text
GMStdGetGlobal_Story_2,Get global variable ${var} into ${output} on ${applyto}${show_input_count},获取全局变量 ${var} 存入 ${applyto} 的 ${output} ${show_input_count},,GML Visual story text
GMStdGetGlobal_Story_3,Get global variable ${var} into temp ${output}${show_input_count},获取全局变量 ${var} 存入临时变量 ${output} ${show_input_count} ,,GML Visual story text
GMStdGetGlobal_Story_4,Get global variable ${var} into temp ${output} on ${applyto}${show_input_count},获取全局变量 ${var} 存入 ${applyto} 的临时变量 ${output} ${show_input_count},,GML Visual story text
GMStdIfVar_Story_1,If ${var} is not equal to ${value},如果变量 ${var} 不等于 ${value} ,,GML Visual story text
GMStdIfVar_Story_2,If ${var} is not equal to ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 不等于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_3,If ${var} is not less than ${value},如果变量 ${var} 不小于 ${value} ,,GML Visual story text
GMStdIfVar_Story_4,If ${var} is not less than ${value} on ${applyto},如果变量 ${var} 在 ${applyto} 上不小于 ${value} ,,GML Visual story text
GMStdIfVar_Story_5,If ${var} is not greater than ${value},如果变量 ${var} 不大于 ${value} ,,GML Visual story text
GMStdIfVar_Story_6,If ${var} is not greater than ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 不大于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_7,If ${var} is not less than or equal to ${value},如果变量 ${var} 不小于或等于 ${value} ,,GML Visual story text
GMStdIfVar_Story_8,If ${var} is not less than or equal to ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 不小于等于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_9,If ${var} is not greater than or equal to ${value},如果变量 ${var} 不大于等于 ${value} ,,GML Visual story text
GMStdIfVar_Story_10,If ${var} is not greater than or equal to ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 不大于等于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_11,If ${var} is equal to ${value},如果变量 ${var} 等于 ${value} ,,GML Visual story text
GMStdIfVar_Story_12,If ${var} is equal to ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 等于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_13,If ${var} is less than ${value},如果变量 ${var} 小于 ${value} ,,GML Visual story text
GMStdIfVar_Story_14,If ${var} is less than ${value} on ${applyto},如果变量 ${var} 在 ${applyto} 上小于 ${value} ,,GML Visual story text
GMStdIfVar_Story_15,If ${var} is greater than ${value},如果变量 ${var} 大于 ${value} ,,GML Visual story text
GMStdIfVar_Story_16,If ${var} is greater than ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 大于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_17,If ${var} is less than or equal to ${value},如果变量 ${var} 小于或等于 ${value} ,,GML Visual story text
GMStdIfVar_Story_18,If ${var} is less than or equal to ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 小于等于 ${value}  ,,GML Visual story text
GMStdIfVar_Story_19,If ${var} is greater than or equal to ${value},如果变量 ${var} 大于或等于 ${value} ,,GML Visual story text
GMStdIfVar_Story_20,If ${var} is greater than or equal to ${value} on ${applyto},如果 ${applyto} 的变量 ${var} 大于等于 ${value}  ,,GML Visual story text
GMStdIfExpr_Story_1,If ${expr} is true${show_input_count},如果 ${expr} 为真${show_input_count} ,,GML Visual story text
GMStdIfExpr_Story_2,If ${expr} is true on ${applyto}${show_input_count},如果 ${applyto}${show_input_count} 上的 ${expr} 为true,,GML Visual story text
GMStdIfExpr_Story_3,If ${expr} is false${show_input_count},如果 ${expr} 为FALSE${show_input_count} ,,GML Visual story text
GMStdIfExpr_Story_4,If ${expr} is false on ${applyto}${show_input_count},如果 ${applyto}${show_input_count} 上的 ${expr} 为false,,GML Visual story text
GMStdIfUndef_Story_1,If ${var} is undefined${show_input_count},如果 ${var} 未定义${show_input_count} ,,GML Visual story text
GMStdIfUndef_Story_2,If ${var} is undefined on ${applyto}${show_input_count},如果 ${applyto}${show_input_count} 上的 ${var} 未定义,,GML Visual story text
GMStdIfUndef_Story_3,If ${var} is not undefined${show_input_count},如果 ${var} 不是未定义的 ${show_input_count} ,,GML Visual story text
GMStdIfUndef_Story_4,If ${var} is not undefined on ${applyto}${show_input_count},如果 ${applyto}${show_input_count} 上的 ${var} 未定义,,GML Visual story text
GMStdElse_Story,Else,否则,,GML Visual story text
GMStdExCode_Story_1,Execute code,执行代码,,GML Visual story text
GMStdExCode_Story_2,Execute code on ${applyto},在 ${applyto} 上执行代码,,GML Visual story text
GMStdExCode_Story_3,${overridden_name},${overridden_name},,GML Visual story text
GMStdExCode_Story_4,${overridden_name} on ${applyto},${applyto} 上的 ${overriden_name},,GML Visual story text
GMStdExScript_Story_1,Execute ${script},执行 ${script} ,,GML Visual story text
GMStdExScript_Story_2,Execute ${script} on ${applyto},在 ${applyto} 上执行 ${script} ,,GML Visual story text
GMStdExScript_Story_3,Execute ${script} with 1 argument,使用1个参数执行 ${script} ,,GML Visual story text
GMStdExScript_Story_4,Execute ${script} with 1 argument on ${applyto},在 ${applyto} 上使用1个参数执行 ${script} ,,GML Visual story text
GMStdExScript_Story_5,Execute ${script} with ${input_count} arguments,使用 ${input_count} 个参数执行 ${script} ,,GML Visual story text
GMStdExScript_Story_6,Execute ${script} with ${input_count} arguments on ${applyto},在 ${applyto} 上使用 ${input_count} 参数执行 ${script} ,,GML Visual story text
GMStdExScript_Story_7,Execute and set ${var} to return value of ${script},执行脚本 ${script} 并设置变量 ${var} 为返回值  ,,GML Visual story text
GMStdExScript_Story_8,Execute and set ${var} to return value of ${script} on ${applyto},在${applyto} 上执行脚本 ${script} 并设置变量 ${var} 为返回值  ,,GML Visual story text
GMStdExScript_Story_9,Execute and set ${var} to return value of ${script} with 1 argument,使用1个参数执行脚本 ${script}并设置变量 ${var} 为返回值 ,,GML Visual story text
GMStdExScript_Story_10,Execute and set ${var} to return value of ${script} with 1 argument on ${applyto},在 ${applyto} 上使用1个参数执行脚本 ${script} 并设置变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_11,Execute and set ${var} to return value of ${script} with ${input_count} arguments,使用${input_count}个参数执行脚本 ${script} 并设置变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_12,Execute and set ${var} to return value of ${script} with ${input_count} arguments on ${applyto},在 ${applyto} 上使用${input_count}个参数执行脚本 ${script} 并设置变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_13,Execute and set temp ${var} to return value of ${script},执行脚本 ${script} 并设置临时变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_14,Execute and set temp ${var} to return value of ${script} on ${applyto},在 ${applyto} 上执行脚本 ${script} 并设置临时变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_15,Execute and set temp ${var} to return value of ${script} with 1 argument,使用1个参数执行脚本 ${script} 并设置临时变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_16,Execute and set temp ${var} to return value of ${script} with 1 argument on ${applyto},在 ${applyto} 上使用1个参数执行脚本 ${script} 并设置临时变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_17,Execute and set temp ${var} to return value of ${script} with ${input_count} arguments,使用${input_count}个参数执行脚本 ${script} 并设置临时变量 ${var} 为返回值,,GML Visual story text
GMStdExScript_Story_18,Execute and set temp ${var} to return value of ${script} with ${input_count} arguments on ${applyto},在 ${applyto} 上使用${input_count}个参数执行脚本 ${script} 并设置临时变量 ${var} 为返回值,,GML Visual story text
GMStdCallFunction_Story_1,Call ${function},调用函数 ${function} ,,GML Visual story text
GMStdCallFunction_Story_2,Call ${function} on ${applyto},在 ${applyto} 上调用函数 ${function} ,,GML Visual story text
GMStdCallFunction_Story_3,Call ${function} with 1 argument,使用1个参数调用函数 ${function} ,,GML Visual story text
GMStdCallFunction_Story_4,Call ${function} with 1 argument on ${applyto},在 ${applyto} 上使用1个参数调用函数 ${function} ,,GML Visual story text
GMStdCallFunction_Story_5,Call ${function} with ${input_count} arguments,使用${input_count}个参数调用函数 ${function} ,,GML Visual story text
GMStdCallFunction_Story_6,Call ${function} with ${input_count} arguments on ${applyto},在 ${applyto} 上使用${input_count}个参数调用函数 ${function} ,,GML Visual story text
GMStdCallFunction_Story_7,Set ${var} to return value of ${function},设置变量 ${var} 为函数 ${function} 的返回值,,GML Visual story text
GMStdCallFunction_Story_8,Set ${var} to return value of ${function} on ${applyto},在 ${applyto} 上设置变量 ${var} 为函数 ${function} 的返回值,,GML Visual story text
GMStdCallFunction_Story_9,Set ${var} to return value of ${function} with 1 argument,设置变量 ${var} 为使用1个参数的函数 ${function} 的返回值,,GML Visual story text
GMStdCallFunction_Story_10,Set ${var} to return value of ${function} with 1 argument on ${applyto},在 ${applyto} 上设置变量 ${var} 为使用1个参数的函数 ${function} 的返回值,,GML Visual story text
GMStdCallFunction_Story_11,Set ${var} to return value of ${function} with ${input_count} arguments,将 ${var} 设置为使用 ${input_count} 个参数返回值 ${function} ,,GML Visual story text
GMStdCallFunction_Story_12,Set ${var} to return value of ${function} with ${input_count} arguments on ${applyto},设置 ${var} 以使用 ${applyto} 上的 ${input_count} 参数返回值 ${function} ,,GML Visual story text
GMStdCallFunction_Story_13,Set temp ${var} to return value of ${function},将临时 ${var} 设置为返回值 ${function} ,,GML Visual story text
GMStdCallFunction_Story_14,Set temp ${var} to return value of ${function} on ${applyto},将临时 ${var} 设置为 ${applyto} 上 ${function} 的返回值,,GML Visual story text
GMStdCallFunction_Story_15,Set temp ${var} to return value of ${function} with 1 argument,使用1个参数将临时 ${var} 设置为返回值 ${function} ,,GML Visual story text
GMStdCallFunction_Story_16,Set temp ${var} to return value of ${function} with 1 argument on ${applyto},将临时 ${var} 设置为在 ${applyto} 上使用1个参数返回值 ${function} ,,GML Visual story text
GMStdCallFunction_Story_17,Set temp ${var} to return value of ${function} with ${input_count} arguments,设置临时变量 ${var} 为使用${input_count}个参数的函数 ${function} 的返回值,,GML Visual story text
GMStdCallFunction_Story_18,Set temp ${var} to return value of ${function} with ${input_count} arguments on ${applyto},在 ${applyto} 上设置临时变量 ${var} 为使用${input_count}个参数的函数 ${function} 的返回值,,GML Visual story text
GMStdNew_Story_1,Set ${var} to new instance of ${function},将 ${var} 设置为 ${function} 的新实例,,GML Visual story text
GMStdNew_Story_2,Set ${var} to new instance of ${function} with 1 argument,使用 1 个参数将 ${var} 设置为 ${function} 的新实例,,GML Visual story text
GMStdNew_Story_3,Set ${var} to new instance of ${function} with ${input_count} arguments,使用 ${input_count} 个参数将 ${var} 设置为 ${function} 的新实例,,GML Visual story text
GMStdNew_Story_4,Set temp ${var} to new instance of ${function},将临时 ${var} 设置为 ${function} 的新实例,,GML Visual story text
GMStdNew_Story_5,Set temp ${var} to new instance of ${function} with 1 argument,使用 1 个参数将临时 ${var} 设置为 ${function} 的新实例,,GML Visual story text
GMStdNew_Story_6,Set temp ${var} to new instance of ${function} with ${input_count} arguments,使用 ${input_count} 参数将临时 ${var} 设置为 ${function} 的新实例,,GML Visual story text
GMStdRet_Story_1,Return ${value},返回 ${value} ,,GML Visual story text
GMStdRet_Story_2,Return ${value} on ${applyto},在 ${applyto} 上返回 ${value} ,,GML Visual story text
GMStdApplyTo_Story_1,Apply to ${applyto},应用于 ${applyto} ,,GML Visual story text
GMStdMacro_Story_1,Define macro ${macro} as ${value}${show_input_count},定义宏 ${macro} 为 ${value} ${show_input_count} ,,GML Visual story text
GMStdMacro_Story_2,Define macro ${macro} as ${value} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上将宏 ${macro} 定义为 ${value} ,,GML Visual story text
GMStdExit_Story,Exit the current event,退出当前事件,,GML Visual story text
GMStdInstCreate_Story_1,Create ${objectid} at ${dnd_pos},在 ${dnd_pos} 创建 ${objectid} ,,GML Visual story text
GMStdInstCreate_Story_2,Create ${objectid} at ${dnd_pos} on ${applyto},在 ${applyto} 上的 ${dnd_pos} 创建 ${objectid} ,,GML Visual story text
GMStdInstCreate_Story_3,Create ${objectid} at ${dnd_pos} into ${var},在 ${dnd_pos} 将 ${objectid} 创建到 ${var} ,,GML Visual story text
GMStdInstCreate_Story_4,Create ${objectid} at ${dnd_pos} into ${var} on ${applyto},将位于 ${dnd_pos} 的 ${objectid} 创建到 ${applyto} 上的 ${var} 中,,GML Visual story text
GMStdInstCreate_Story_5,Create ${objectid} at ${dnd_pos} into temp ${var},在 ${dnd_pos} 将 ${objectid} 创建到临时 ${var} ,,GML Visual story text
GMStdInstCreate_Story_6,Create ${objectid} at ${dnd_pos} into temp ${var} on ${applyto},在 ${applyto} 上的临时 ${var} 中创建 ${objectid} ，位置为 ${dnd_pos} ,,GML Visual story text
GMStdInstDestroy_Story_1,Destroy this instance,销毁此实例,,GML Visual story text
GMStdInstDestroy_Story_2,Destroy ${applyto} on ${applyto},销毁 ${applyto} 上的 ${applyto} ,,GML Visual story text
GMStdDestroyAtPos_Story_1,Destroy instances at ${dnd_pos},销毁 ${dnd_pos} 处的实例,,GML Visual story text
GMStdDestroyAtPos_Story_2,Destroy instances at ${dnd_pos} on ${applyto},销毁 ${applyto} 上 ${dnd_pos} 处的实例,,GML Visual story text
GMStdInstChange_Story_1,Change into ${objind},更改为 ${objind} ,,GML Visual story text
GMStdInstChange_Story_2,Change ${applyto} into ${objind} on ${applyto},在 ${applyto} 上将 ${applyto} 更改为 ${objind} ,,GML Visual story text
GMStdSetAlarm_Story_1,Set alarm ${alarm} to ${steps}${show_input_count},将计时器 ${alarm} 设置为 ${step} ${show_input_count} ,,GML Visual story text
GMStdSetAlarm_Story_2,Set alarm ${alarm} to ${steps} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上将计时器 ${alarm} 设置为 ${step} ,,GML Visual story text
GMStdSetAlarm_Story_3,Add ${steps} to alarm ${alarm}${show_input_count},将 ${steps} 添加到计时器 ${alarm} ${show_input_count} ,,GML Visual story text
GMStdSetAlarm_Story_4,Add ${steps} to alarm ${alarm} on ${applyto}${show_input_count},将 ${step} 添加到 ${applyto}${show_input_count} 上的计时器 ${alarm} ,,GML Visual story text
GMStdGetAlarm_Story_1,Get alarm ${alarm} into ${var},将计时器 ${alarm} 获取到 ${var} ,,GML Visual story text
GMStdGetAlarm_Story_2,Get alarm ${alarm} into ${var} on ${applyto},将计时器 ${alarm} 置于 ${applyto} 上的 ${var} 中,,GML Visual story text
GMStdGetAlarm_Story_3,Get alarm ${alarm} into temp ${var},将计时器 ${alarm} 放入临时 ${var} ,,GML Visual story text
GMStdGetAlarm_Story_4,Get alarm ${alarm} into temp ${var} on ${applyto},将计时器 ${alarm} 置于 ${applyto} 上的临时 ${var} 中,,GML Visual story text
GMStdInstCount_Story_1,Get ${object} count into ${var},对物体 ${object} 计数并存入变量 ${var} ,,GML Visual story text
GMStdInstCount_Story_2,Get ${object} count into ${var} on ${applyto},在 ${applyto} 上对物体 ${object} 计数并存入 ${var} ,,GML Visual story text
GMStdInstCount_Story_3,Get ${object} count into temp ${var},对物体 ${object} 计数并存入临时变量 ${var} ,,GML Visual story text
GMStdInstCount_Story_4,Get ${object} count into temp ${var} on ${applyto},在 ${applyto} 上对物体 ${object} 计数并存入临时变量 ${var} ,,GML Visual story text
GMStdCallUserEvent_Story_1,Call user event ${event}${show_input_count},调用用户事件 ${event} ${show_input_count} ,,GML Visual story text
GMStdCallUserEvent_Story_2,Call user event ${event} on ${applyto}${show_input_count},在 ${applyto}上调用用户事件 ${event} ${show_input_count} ,,GML Visual story text
GMStdSetInstanceVar_Story_1,Set instance variable ${dnd_set_inst_vars} to ${value}${show_input_count},设置实例变量 ${dnd_set_inst_vars} 为 ${value}${show_input_count} ,,GML Visual story text
GMStdSetInstanceVar_Story_2,Set instance variable ${dnd_set_inst_vars} to ${value} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上设置实例变量 ${dnd_set_inst_vars} 为 ${value} ,,GML Visual story text
GMStdGetInstanceVar_Story_1,Get instance variable ${dnd_get_inst_vars} into ${target}${show_input_count},获取实例变量${dnd_get_inst_vars} 并存入变量 ${target}${show_input_count} ,,GML Visual story text
GMStdGetInstanceVar_Story_2,Get instance variable ${dnd_get_inst_vars} into ${target} on ${applyto}${show_input_count},将实例变量${dnd_get_inst_vars}获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdGetInstanceVar_Story_3,Get instance variable ${dnd_get_inst_vars} into temp ${target}${show_input_count},将实例变量${dnd_get_inst_vars}获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdGetInstanceVar_Story_4,Get instance variable ${dnd_get_inst_vars} into temp ${target} on ${applyto}${show_input_count},将实例变量${dnd_get_inst_vars}获取到 ${applyto}${show_input_count} 上的临时 ${target} 中,,GML Visual story text
GMStdSetSprite_Story_1,Set sprite to ${spriteind} at frame ${imageind},在帧 ${imageind} 中将精灵设置为 ${spriteind} ,,GML Visual story text
GMStdSetSprite_Story_2,Set sprite to ${spriteind} at frame ${imageind} on ${applyto},将 ${applyto} 上第 ${imageind} 帧的精灵设置为 ${spriteind} ,,GML Visual story text
GMStdRotSprite_Story_1,Set rotation to ${angle},将旋转设置为 ${angle} ,,GML Visual story text
GMStdRotSprite_Story_2,Set rotation to ${angle} on ${applyto},在 ${applyto} 上将旋转设置为 ${angle} ,,GML Visual story text
GMStdRotSprite_Story_3,Add ${angle} to rotation,令旋转角度增加 ${angle}°,,GML Visual story text
GMStdRotSprite_Story_4,Add ${angle} to rotation on ${applyto},令 ${applyto} 的旋转角度增加 ${angle}°,,GML Visual story text
GMStdSpriteAnimSpd_Story_1,Set animation speed to ${speed},设置动画速度为 ${speed} ,,GML Visual story text
GMStdSpriteAnimSpd_Story_2,Set animation speed to ${speed} on ${applyto},设置 ${applyto} 的动画速度为 ${speed} ,,GML Visual story text
GMStdSpriteAnimSpd_Story_3,Add ${speed} to animation speed,令动画速度增加${speed},,GML Visual story text
GMStdSpriteAnimSpd_Story_4,Add ${speed} to animation speed on ${applyto},令 ${applyto} 的动画速度增加 ${speed} ,,GML Visual story text
GMStdSpriteScale_Story_1,"Scale to ${xscale},${yscale}","缩放至${xScale}、${yscale}",,GML Visual story text
GMStdSpriteScale_Story_2,"Scale to ${xscale},image_yscale","缩放至${XScale}，image_yscale",,GML Visual story text
GMStdSpriteScale_Story_3,"Scale to ${xscale},image_yscale+${yscale}","缩放至${XScale}，image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_4,"Scale to image_xscale,${yscale}","缩放至image_xscale，${yscale}",,GML Visual story text
GMStdSpriteScale_Story_5,"Scale to image_xscale,image_yscale","缩放至image_xscale、image_yscale",,GML Visual story text
GMStdSpriteScale_Story_6,"Scale to image_xscale,image_yscale+${yscale}","缩放至image_xscale，image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_7,"Scale to image_xscale+${xscale},${yscale}","缩放至image_xScale+${xScale}，${yscale}",,GML Visual story text
GMStdSpriteScale_Story_8,"Scale to image_xscale+${xscale},image_yscale","缩放至image_xScale+${xScale}，image_yscale",,GML Visual story text
GMStdSpriteScale_Story_9,"Scale to image_xscale+${xscale},image_yscale+${yscale}","缩放至image_xscale+${xscale}、image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_10,"Scale ${applyto} to ${xscale},${yscale} on ${applyto}","将${applyto}上的${applyto}缩放到${XScale}、${yscale}",,GML Visual story text
GMStdSpriteScale_Story_11,"Scale ${applyto} to ${xscale},image_yscale on ${applyto}","将${applyto}缩放到${XScale}，${applyto}上的image_yscale",,GML Visual story text
GMStdSpriteScale_Story_12,"Scale ${applyto} to ${xscale},image_yscale+${yscale} on ${applyto}","将${applyto}缩放到${xScale}，${applyto}上的image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_13,"Scale ${applyto} to image_xscale,${yscale} on ${applyto}","将${applyto}缩放到${applyto}上的image_XScale，${yscale}",,GML Visual story text
GMStdSpriteScale_Story_14,"Scale ${applyto} to image_xscale,image_yscale on ${applyto}","将${applyto}缩放到${applyto}上的image_xscale、image_yscale",,GML Visual story text
GMStdSpriteScale_Story_15,"Scale ${applyto} to image_xscale,image_yscale+${yscale} on ${applyto}","将${applyto}缩放到${applyto}上的image_xscale、image_yscale+${yscale}",,GML Visual story text
GMStdSpriteScale_Story_16,"Scale ${applyto} to image_xscale+${xscale},${yscale} on ${applyto}","将${applyto}缩放到${applyto}上的image_XScale+${XScale}，${yscale}",,GML Visual story text
GMStdSpriteScale_Story_17,"Scale ${applyto} to image_xscale+${xscale},image_yscale on ${applyto}","将${applyto}缩放到${applyto}上的image_xscale+${xscale}、image_yscale",,GML Visual story text
GMStdSpriteScale_Story_18,"Scale ${applyto} to image_xscale+${xscale},image_yscale+${yscale} on ${applyto}","将${applyto}缩放到${applyto}上的image_xscale+${xscale}、image_yscale+${yscale}",,GML Visual story text
GMStdSpriteAlpha_Story_1,Set alpha to ${alpha},设置透明度为 ${alpha} ,,GML Visual story text
GMStdSpriteAlpha_Story_2,Set alpha to ${alpha} on ${applyto},设置 ${applyto} 的透明度为 ${alpha} ,,GML Visual story text
GMStdSpriteAlpha_Story_3,Add ${alpha} to alpha,令透明度增加 ${alpha} ,,GML Visual story text
GMStdSpriteAlpha_Story_4,Add ${alpha} to alpha on ${applyto},令 ${applyto} 的透明度将 ${alpha},,GML Visual story text
GMStdSpriteColor_Story_1,Set sprite blend colour to ${colour},设置精灵混合颜色为 ${color} ,,GML Visual story text
GMStdSpriteColor_Story_2,Set sprite blend colour to ${colour} on ${applyto},在 ${applyto} 上将精灵混合颜色设置为 ${color} ,,GML Visual story text
GMStdInstExists_Story_1,Check if ${obj} does not exist,检查物体 ${obj} 是否不存在,,GML Visual story text
GMStdInstExists_Story_2,Check if ${obj} does not exist on ${applyto},在 ${applyto} 上检查是否不存在物体 ${obj} ,,GML Visual story text
GMStdInstExists_Story_3,Check if ${obj} exists,检查物体 ${obj} 是否存在,,GML Visual story text
GMStdInstExists_Story_4,Check if ${obj} exists on ${applyto},在 ${applyto} 上检查是否存在物体 ${obj} ,,GML Visual story text
GMStdInheritEvent_Story_1,Call parent event,调用父事件,,GML Visual story text
GMStdInheritEvent_Story_2,Call parent event on ${applyto},在 ${applyto} 上调用父事件,,GML Visual story text
GMStdIfSequenceExists_Story_1,If sequence ${obj} exists,如果序列 ${obj} 存在,,GML Visual story text
GMStdIfSequenceExists_Story_2,If sequence ${obj} does not exists,如果序列 ${obj} 不存在,,GML Visual story text
GMStdSeqDestroy_Story_1,Destroy sequence ${var},销毁序列 ${var},,GML Visual story text
GMStdSeqPlay_Story_1,Play sequence ${var},播放序列 ${var},,GML Visual story text
GMStdSeqPause_Story_1,Pause sequence ${var},暂停序列 ${var},,GML Visual story text
GMStdSeqSetPos_Story_1,Set position of sequence instance ${sequenceelmid} to ${dnd_pos},将序列实例 ${Sequenceelmid} 的位置设置为 ${DND_POS},,GML Visual story text
GMStdSeqCreate_Story_1,Create ${sequenceid} at ${dnd_pos},在 ${dnd_pos} 创建 ${equenceid},,GML Visual story text
GMStdSeqCreate_Story_2,Create ${sequenceid} at ${dnd_pos} on ${applyto},在 ${applyto} 上的 ${dnd_pos} 创建 ${equenceid},,GML Visual story text
GMStdSeqCreate_Story_3,Create ${sequenceid} at ${dnd_pos} into ${var},在 ${dnd_pos} 将 ${equenceid} 创建到 ${var},,GML Visual story text
GMStdSeqCreate_Story_4,Create ${sequenceid} at ${dnd_pos} into ${var} on ${applyto},在 ${applyto} 上的 ${var} 中创建 ${Sequenceid}，位置为 ${dnd_pos},,GML Visual story text
GMStdSeqCreate_Story_5,Create ${sequenceid} at ${dnd_pos} into temp ${var},在 ${dnd_pos} 将 ${equenceid} 创建到临时 ${var},,GML Visual story text
GMStdSeqCreate_Story_6,Create ${sequenceid} at ${dnd_pos} into temp ${var} on ${applyto},在 ${applyto} 上的临时 ${var} 中创建 ${Sequenceid}，位置为 ${dnd_pos},,GML Visual story text
GMStdSeqGetPos_Story_1,Get position of sequence instance ${sequenceelmid} into ${varx} and ${vary},获取序列实例 ${equenceelmid} 在 ${varx} 和 ${Varie} 中的位置,,GML Visual story text
GMStdSeqGetPos_Story_2,Get position of sequence instance ${sequenceelmid} into temp ${varx} and ${vary},获取序列实例 ${equenceelmid} 在临时 ${varx} 和 ${Varie} 中的位置,,GML Visual story text
GMStdSeqGetPos_Story_3,Get position of sequence instance ${sequenceelmid} into ${varx} and temp ${vary},将序列实例 ${equenceelmid} 的位置获取到 ${varx} 和缓存 ${Varie} 中,,GML Visual story text
GMStdSeqGetPos_Story_4,Get position of sequence instance ${sequenceelmid} into temp ${varx} and temp ${vary},获取序列实例 ${equenceelmid} 在临时 ${varx} 和临时 ${Varie} 中的位置,,GML Visual story text
GMStdSeqGetLength_Story_1,Get length of sequence instance ${sequenceelmid} into ${var},将序列实例${sequenceelmid}的长度获取到${var},,GML Visual story text
GMStdSeqGetLength_Story_2,Get length of sequence instance ${sequenceelmid} into temp ${var},将序列实例${sequenceelmid}的长度获取到临时${var},,GML Visual story text
GMStdIfMousePressed_Story_1,If mouse button ${button} is pressed,如果鼠标按钮 ${button} 被按下,,GML Visual story text
GMStdIfMousePressed_Story_2,If mouse button ${button} is pressed on ${applyto},对于 ${applyto} 如果按下鼠标按钮 ${button} ,,GML Visual story text
GMStdIfMousePressed_Story_3,If mouse button ${button} is not pressed,如果鼠标按钮 ${button} 未被按下,,GML Visual story text
GMStdIfMousePressed_Story_4,If mouse button ${button} is not pressed on ${applyto},对于 ${applyto} 如果鼠标按钮 ${button} 未被按下,,GML Visual story text
GMStdIfMouseDown_Story_1,If mouse button ${button} is down,如果鼠标按键 ${button} 被按住,,GML Visual story text
GMStdIfMouseDown_Story_2,If mouse button ${button} is down on ${applyto},对于 ${applyto} 如果鼠标按钮 ${button} 被按住,,GML Visual story text
GMStdIfMouseDown_Story_3,If mouse button ${button} is not down,如果鼠标按钮 ${button} 未被按住,,GML Visual story text
GMStdIfMouseDown_Story_4,If mouse button ${button} is not down on ${applyto},如果 ${applyto} 上的鼠标按钮 ${button} 未被按住,,GML Visual story text
GMStdIfMouseUp_Story_1,If mouse button ${button} is released,如果鼠标按钮 ${button} 被松开,,GML Visual story text
GMStdIfMouseUp_Story_2,If mouse button ${button} is released on ${applyto},对于 ${applyto} 如果鼠标按钮 ${button} 被松开,,GML Visual story text
GMStdIfMouseUp_Story_3,If mouse button ${button} is not released,如果鼠标按钮 ${button} 未被松开,,GML Visual story text
GMStdIfMouseUp_Story_4,If mouse button ${button} is not released on ${applyto},对于 ${applyto} 如果鼠标按钮 ${button} 未被松开,,GML Visual story text
GMStdIfKeyPressed_Story_1,If ${key} is pressed,如果按键 ${key} 被按下,,GML Visual story text
GMStdIfKeyPressed_Story_2,If ${key} is pressed on ${applyto},对于 ${applyto} 如果按键 ${key} 被按下,,GML Visual story text
GMStdIfKeyPressed_Story_3,If ${key} is not pressed,如果按键 ${key} 未被按下,,GML Visual story text
GMStdIfKeyPressed_Story_4,If ${key} is not pressed on ${applyto},对于 ${applyto} 如果按键 ${key} 未被按下,,GML Visual story text
GMStdIfKeyDown_Story_1,If ${key} is down,如果按键 ${key} 被按住,,GML Visual story text
GMStdIfKeyDown_Story_2,If ${key} is down on ${applyto},对于 ${applyto} 如果按键 ${key} 被按住,,GML Visual story text
GMStdIfKeyDown_Story_3,If ${key} is not down,如果 ${key} 未被按住,,GML Visual story text
GMStdIfKeyDown_Story_4,If ${key} is not down on ${applyto},对于 ${applyto} 如果按键 ${key} 未被按住,,GML Visual story text
GMStdIfKeyUp_Story_1,If ${key} is released,如果按键 ${key} 被松开,,GML Visual story text
GMStdIfKeyUp_Story_2,If ${key} is released on ${applyto},对于 ${applyto} 如果按键 ${key}被松开,,GML Visual story text
GMStdIfKeyUp_Story_3,If ${key} is not released,如果按键 ${key} 未被释放,,GML Visual story text
GMStdIfKeyUp_Story_4,If ${key} is not released on ${applyto},对于 ${applyto} 如果按键 ${key} 未被释放,,GML Visual story text
GMStdVKeyShow_Story_1,Show virtual keyboard with ${keyboard_type},显示具有 ${keyboard_type} 的虚拟键盘,,GML Visual story text
GMStdVKeyShow_Story_2,Show virtual keyboard with ${keyboard_type} on ${applyto},在 ${applyto} 上显示 ${keyboard_type} 的虚拟键盘,,GML Visual story text
GMStdVKeyHide_Story,Hide virtual keyboard,隐藏虚拟键盘,,GML Visual story text
GMStdVKeyHeight_Story_1,Get virtual keyboard height into ${target},将虚拟键盘高度设置为 ${target} ,,GML Visual story text
GMStdVKeyHeight_Story_2,Get virtual keyboard height into temp ${target},将虚拟键盘高度获取到温度 ${target} ,,GML Visual story text
GMStdVKeyStatus_Story_1,If virtual keyboard is showing,如果显示虚拟键盘,,GML Visual story text
GMStdVKeyStatus_Story_2,If virtual keyboard is showing on ${applyto},如果 ${applyto} 上显示虚拟键盘,,GML Visual story text
GMStdVKeyStatus_Story_3,If virtual keyboard is showing into ${target},如果虚拟键盘显示在 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_4,If virtual keyboard is showing into ${target} on ${applyto},如果虚拟键盘显示在 ${applyto} 上的 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_5,If virtual keyboard is showing into temp ${target},如果虚拟键盘显示在临时 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_6,If virtual keyboard is showing into temp ${target} on ${applyto},如果虚拟键盘显示在 ${applyto} 上的临时 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_7,If virtual keyboard is not showing,如果未显示虚拟键盘,,GML Visual story text
GMStdVKeyStatus_Story_8,If virtual keyboard is not showing on ${applyto},如果 ${applyto} 上未显示虚拟键盘,,GML Visual story text
GMStdVKeyStatus_Story_9,If virtual keyboard is not showing into ${target},如果虚拟键盘未显示在 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_10,If virtual keyboard is not showing into ${target} on ${applyto},如果虚拟键盘未显示到 ${applyto} 上的 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_11,If virtual keyboard is not showing into temp ${target},如果虚拟键盘未显示在临时 ${target} 中,,GML Visual story text
GMStdVKeyStatus_Story_12,If virtual keyboard is not showing into temp ${target} on ${applyto},如果虚拟键盘未显示到 ${applyto} 上的临时 ${target} 中,,GML Visual story text
GMStdGPAxis_Story_1,Get ${axis} axis value on gamepad ${gp} into ${var},获取游戏手柄 ${gp} 上的 ${axis} 轴的值并存入变量 ${var},,GML Visual story text
GMStdGPAxis_Story_2,Get ${axis} axis value on gamepad ${gp} into ${var} on ${applyto},获取游戏手柄 ${gp} 上的 ${axis} 轴的值并存入 ${applyto} 的变量 ${var} ,,GML Visual story text
GMStdGPAxis_Story_3,Get ${axis} axis value on gamepad ${gp} into temp ${var},获取游戏手柄 ${gp} 上的 ${axis} 轴的值并存入临时变量 ${var},,GML Visual story text
GMStdGPAxis_Story_4,Get ${axis} axis value on gamepad ${gp} into temp ${var} on ${applyto},获取游戏手柄 ${gp} 上的 ${axis} 轴的值并存入 ${applyto} 的临时变量 ${var},,GML Visual story text
GMStdGPTrigger_Story_1,Get ${trigger} value on gamepad ${gp} into ${var},获取游戏手柄 ${gp} 上的 ${trigger} 值并存入变量 ${var} ,,GML Visual story text
GMStdGPTrigger_Story_2,Get ${trigger} value on gamepad ${gp} into ${var} on ${applyto},获取游戏手柄 ${gp} 上的 ${trigger} 值并存入 ${applyto} 的变量 ${var} ,,GML Visual story text
GMStdGPTrigger_Story_3,Get ${trigger} value on gamepad ${gp} into temp ${var},获取游戏手柄 ${gp} 上的 ${trigger} 值并存入临时变量 ${var} ,,GML Visual story text
GMStdGPTrigger_Story_4,Get ${trigger} value on gamepad ${gp} into temp ${var} on ${applyto},获取游戏手柄 ${gp} 上的 ${trigger} 值并存入 ${applyto} 的临时变量 ${var} 中,,GML Visual story text
GMStdGpDeviceC_Story_1,Get gamepad device count into ${var},对游戏手柄设备计数并存入变量 ${var} ,,GML Visual story text
GMStdGpDeviceC_Story_2,Get gamepad device count into ${var} on ${applyto},在 ${applyto} 上对游戏手柄设备计数并存入 ${var} ,,GML Visual story text
GMStdGpDeviceC_Story_3,Get gamepad device count into temp ${var},对游戏手柄设备计数并存入临时变量 ${var} ,,GML Visual story text
GMStdGpDeviceC_Story_4,Get gamepad device count into temp ${var} on ${applyto},在 ${applyto} 上对游戏手柄设备计数并存入临时变量 ${var} ,,GML Visual story text
GMStdGPConnc_Story_1,Get whether gamepad ${gp} is connected into ${var},获取游戏手柄 ${gp} 是否被连入并存入变量 ${var} ,,GML Visual story text
GMStdGPConnc_Story_2,Get whether gamepad ${gp} is connected into ${var} on ${applyto},获取游戏手柄 ${gp} 是否被连入并存入 ${applyto} 的变量 ${var} ,,GML Visual story text
GMStdGPConnc_Story_3,Get whether gamepad ${gp} is connected into temp ${var},获取游戏手柄 ${gp} 是否被连入并存入临时变量 ${var} ,,GML Visual story text
GMStdGPConnc_Story_4,Get whether gamepad ${gp} is connected into temp ${var} on ${applyto},获取游戏手柄 ${gp} 是否连入并存入 ${applyto} 的临时变量 ${var} ,,GML Visual story text
GMStdGPDeadzone_Story_1,Set deadzone of gamepad ${gp} to ${deadzone},设置游戏手柄 ${gp} 的盲区为 ${deadzone} ,,GML Visual story text
GMStdGPDeadzone_Story_2,Set deadzone of gamepad ${gp} to ${deadzone} on ${applyto},在 ${applyto} 上设置游戏手柄 ${gp} 的盲区为 ${deadzone} ,,GML Visual story text
GMStdGPThreshold_Story_1,Set button threshold of gamepad ${gp} to ${threshold},设置游戏手柄 ${gp} 的按钮阈值为 ${threshold} ,,GML Visual story text
GMStdGPThreshold_Story_2,Set button threshold of gamepad ${gp} to ${threshold} on ${applyto},在 ${applyto} 上设置游戏手柄 ${gp} 的按钮阈值为 ${threshold} ,,GML Visual story text
GMStdIfGPDown_Story_1,If ${btn} on gamepad ${gp} is down,如果游戏手柄 ${gp} 的按键 ${btn} 被按住,,GML Visual story text
GMStdIfGPDown_Story_2,If ${btn} on gamepad ${gp} is down on ${applyto},对于 ${applyto} 如果游戏手柄 ${gp} 的按键 ${btn} 被按住,,GML Visual story text
GMStdIfGPDown_Story_3,If ${btn} on gamepad ${gp} is not down,如果游戏手柄 ${gp} 的按键 ${btn} 未被按住,,GML Visual story text
GMStdIfGPDown_Story_4,If ${btn} on gamepad ${gp} is not down on ${applyto},对于 ${applyto} 如果游戏手柄 ${gp} 的按键 ${btn} 未被按住,,GML Visual story text
GMStdIfGPPressed_Story_1,If ${btn} on gamepad ${gp} is pressed,如果游戏手柄 ${gp} 的按键 ${btn} 被按下,,GML Visual story text
GMStdIfGPPressed_Story_2,If ${btn} on gamepad ${gp} is pressed on ${applyto},对于 ${applyto} 如果游戏手柄 ${gp} 的按键 ${btn} 被按下,,GML Visual story text
GMStdIfGPPressed_Story_3,If ${btn} on gamepad ${gp} is not pressed,如果游戏手柄 ${gp} 的按键 ${btn} 未被按下,,GML Visual story text
GMStdIfGPPressed_Story_4,If ${btn} on gamepad ${gp} is not pressed on ${applyto},如果游戏手柄 ${gp} 上的 ${btn} 未在 ${applyto} 上按下,,GML Visual story text
GMStdIfGPUp_Story_1,If ${btn} on gamepad ${gp} is released,如果游戏手柄 ${gp} 上的 ${btn} 被释放,,GML Visual story text
GMStdIfGPUp_Story_2,If ${btn} on gamepad ${gp} is released on ${applyto},如果游戏手柄 ${gp} 上的 ${btn} 在 ${applyto} 上发布,,GML Visual story text
GMStdIfGPUp_Story_3,If ${btn} on gamepad ${gp} is not released,如果游戏手柄 ${gp} 上的 ${btn} 未释放,,GML Visual story text
GMStdIfGPUp_Story_4,If ${btn} on gamepad ${gp} is not released on ${applyto},如果游戏手柄 ${gp} 上的 ${btn} 未在 ${applyto} 上发布,,GML Visual story text
GMStdDirFixed_Story_1,Stop movement,停止移动,,GML Visual story text
GMStdDirFixed_Story_2,Stop movement on ${applyto},在 ${applyto} 上停止移动,,GML Visual story text
GMStdDirFixed_Story_3,Set direction to ${direction},将方向设置为 ${direction} ,,GML Visual story text
GMStdDirFixed_Story_4,Set direction to ${direction} on ${applyto},将方向设置为 ${applyto} 上的 ${direction} ,,GML Visual story text
GMStdDirFree_Story_1,Add ${direction} to direction,将 ${direction} 添加到方向,,GML Visual story text
GMStdDirFree_Story_2,Add ${direction} to direction on ${applyto},将 ${direction} 添加到 ${applyto} 上的方向,,GML Visual story text
GMStdDirPoint_Story_1,Set direction towards ${dnd_position},设置朝向 ${dnd_position} 的方向,,GML Visual story text
GMStdDirPoint_Story_2,Set direction towards ${dnd_position} on ${applyto},将方向设置为 ${applyto} 上的 ${dnd_position} ,,GML Visual story text
GMStdDirRandom_Story_1,Set random direction from ${direction},从 ${direction} 设置随机方向,,GML Visual story text
GMStdDirRandom_Story_2,Set random direction from ${direction} on ${applyto},从 ${applyto} 上的 ${direction} 设置随机方向,,GML Visual story text
GMStdSpeed_Story_1,Add ${speed} to speed,将 ${speed} 添加到speed,,GML Visual story text
GMStdSpeed_Story_2,Add ${speed} to speed on ${applyto},在 ${applyto} 上添加 ${speed} 以提高速度,,GML Visual story text
GMStdSpeed_Story_3,Set speed to ${speed},将speed设置为 ${speed} ,,GML Visual story text
GMStdSpeed_Story_4,Set speed to ${speed} on ${applyto},在 ${applyto} 上将speed设置为 ${speed} ,,GML Visual story text
GMStdSpeed_Story_5,Add ${speed} to horizontal speed,将 ${speed} 添加到水平速度,,GML Visual story text
GMStdSpeed_Story_6,Add ${speed} to horizontal speed on ${applyto},将 ${speed} 添加到 ${applyto} 上的水平速度,,GML Visual story text
GMStdSpeed_Story_7,Set horizontal speed to ${speed},将水平速度设置为 ${speed} ,,GML Visual story text
GMStdSpeed_Story_8,Set horizontal speed to ${speed} on ${applyto},在 ${applyto} 上将水平速度设置为 ${speed} ,,GML Visual story text
GMStdSpeed_Story_9,Add ${speed} to vertical speed,将 ${speed} 添加到垂直速度,,GML Visual story text
GMStdSpeed_Story_10,Add ${speed} to vertical speed on ${applyto},将 ${speed} 添加到 ${applyto} 上的垂直速度,,GML Visual story text
GMStdSpeed_Story_11,Set vertical speed to ${speed},将垂直速度设置为 ${speed} ,,GML Visual story text
GMStdSpeed_Story_12,Set vertical speed to ${speed} on ${applyto},在 ${applyto} 上将垂直速度设置为 ${speed} ,,GML Visual story text
GMStdGravDir_Story_1,Add ${direction} to gravity direction,将 ${direction} 添加到重力方向,,GML Visual story text
GMStdGravDir_Story_2,Add ${direction} to gravity direction on ${applyto},将 ${direction} 添加到 ${applyto} 上的重力方向,,GML Visual story text
GMStdGravDir_Story_3,Set gravity direction to ${direction},将重力方向设置为 ${direction} ,,GML Visual story text
GMStdGravDir_Story_4,Set gravity direction to ${direction} on ${applyto},在 ${applyto} 上将重力方向设置为 ${direction} ,,GML Visual story text
GMStdGravForce_Story_1,Add ${force} to gravity force,将 ${force} 添加到重力,,GML Visual story text
GMStdGravForce_Story_2,Add ${force} to gravity force on ${applyto},将 ${force} 添加到 ${applyto} 上的重力,,GML Visual story text
GMStdGravForce_Story_3,Set gravity force to ${force},将重力设置为 ${force} ,,GML Visual story text
GMStdGravForce_Story_4,Set gravity force to ${force} on ${applyto},将 ${applyto} 上的重力设置为 ${force} ,,GML Visual story text
GMStdReverse_Story_1,Reverse direction,反转方向,,GML Visual story text
GMStdReverse_Story_2,Reverse direction on ${applyto}, ${applyto} 上的反向,,GML Visual story text
GMStdReverse_Story_3,Reverse horizontal speed,反转水平速度,,GML Visual story text
GMStdReverse_Story_4,Reverse horizontal speed on ${applyto},反转 ${applyto} 的水平速度,,GML Visual story text
GMStdReverse_Story_5,Reverse vertical speed,反转垂直速度,,GML Visual story text
GMStdReverse_Story_6,Reverse vertical speed on ${applyto},反转 ${applyto} 的垂直速度,,GML Visual story text
GMStdReverse_Story_7,Reverse gravitational direction,反转重力方向,,GML Visual story text
GMStdReverse_Story_8,Reverse gravitational direction on ${applyto},反转 ${applyto} 的重力方向,,GML Visual story text
GMStdFriction_Story_1,Add ${friction} to friction,令摩擦力增加 ${friction} ,,GML Visual story text
GMStdFriction_Story_2,Add ${friction} to friction on ${applyto},令 ${applyto} 的摩擦力增加 ${friction} 添加,,GML Visual story text
GMStdFriction_Story_3,Set friction to ${friction},设置摩擦力为 ${friction} ,,GML Visual story text
GMStdFriction_Story_4,Set friction to ${friction} on ${applyto},设置 ${applyto} 的摩擦力为 ${friction} ,,GML Visual story text
GMStdJumpPoint_Story_1,Jump to ${dnd_position},跳至 ${dnd_position} ,,GML Visual story text
GMStdJumpPoint_Story_2,Jump to ${dnd_position} on ${applyto},跳至 ${applyto} 上的 ${dnd_position} ,,GML Visual story text
GMStdJumpStart_Story_1,Jump to start,跳至起点,,GML Visual story text
GMStdJumpStart_Story_2,Jump ${applyto} to start,跳 ${applyto} 开始,,GML Visual story text
GMStdMove_And_Collide_Story,"Move by ${xvel},${yvel} colliding with ${object} performing ${num_iterations} steps","按 ${xvel}、${yvel} 移动，与执行 ${num_iterations} 个步骤的 ${object} 发生冲突",,GML Visual story text
GMStdMaxXMove,Max X Movement,最大X运动,,GML Visual story text
GMStdMaxYMove,Max Y Movement,最大Y运动,,GML Visual story text
GMStdXOff,X offset,X偏移值,,GML Visual story text
GMStdYOff,Y offset,Y偏移值,,GML Visual story text
GMStdNumIterations,Iterations,迭代次数,,GML Visual library action name
GMStdXDir,X Dist,X方向,,GML Visual library action name
GMStdYDir,Y Dist,Y方向,,GML Visual library action name
GMStdSnapPos_Story_1,"Snap  to ${xsnap},${ysnap}",快照到${xsnap}、${ysnap},,GML Visual story text
GMStdSnapPos_Story_2,"Snap ${applyto} to ${xsnap},${ysnap} on ${applyto}",将${applyto}快照到${applyto}上的${xsnap}、${ysnap},,GML Visual story text
GMStdWrapRoom_Story_1,Wrap around room,环绕房间,,GML Visual story text
GMStdWrapRoom_Story_2,Wrap ${applyto} around room on ${applyto},在 ${applyto} 上的空间周围环绕 ${applyto} ,,GML Visual story text
GMStdIfAnyObjAt_Story_1,If any instance is overlapping self at ${dnd_position},如果任何实例在 ${dnd_position} 处与自身重叠,,GML Visual story text
GMStdIfAnyObjAt_Story_2,If any instance is overlapping self at ${dnd_position} on ${applyto},如果任何实例在 ${applyto} 上的 ${dnd_position} 处与自身重叠,,GML Visual story text
GMStdIfAnyObjAt_Story_3,If no instance is overlapping self at ${dnd_position},如果 ${dnd_position} 处没有实例与自身重叠,,GML Visual story text
GMStdIfAnyObjAt_Story_4,If no instance is overlapping self at ${dnd_position} on ${applyto},如果在 ${applyto} 上的 ${dnd_position} 处没有实例与自身重叠,,GML Visual story text
GMStdIfObjAt_Story_1,If ${object} is overlapping self at ${dnd_position}${show_input_count},如果 ${object} 在 ${dnd_position}${show_input_count} 与自身重叠,,GML Visual story text
GMStdIfObjAt_Story_2,If ${object} is overlapping self at ${dnd_position} on ${applyto}${show_input_count},如果 ${object} 在 ${applyto}${show_input_count} 上的 ${dnd_position} 处与自身重叠,,GML Visual story text
GMStdIfObjAt_Story_3,If ${object} is overlapping self at ${dnd_position} into ${target}${show_input_count},如果 ${object} 将位于 ${dnd_position} 的自身重叠到 ${target}${show_input_count} ,,GML Visual story text
GMStdIfObjAt_Story_4,If ${object} is overlapping self at ${dnd_position} into ${target} on ${applyto}${show_input_count},如果 ${object} 将 ${dnd_position} 处的自身重叠到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdIfObjAt_Story_5,If ${object} is overlapping self at ${dnd_position} into temp ${target}${show_input_count},如果 ${object} 在 ${dnd_position} 将自身重叠到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdIfObjAt_Story_6,If ${object} is overlapping self at ${dnd_position} into temp ${target} on ${applyto}${show_input_count},如果 ${object} 在 ${dnd_position} 将自身重叠到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdIfObjAt_Story_7,If ${object} is not overlapping self at ${dnd_position}${show_input_count},如果 ${object} 在 ${dnd_position}${show_input_count} 处不与自身重叠,,GML Visual story text
GMStdIfObjAt_Story_8,If ${object} is not overlapping self at ${dnd_position} on ${applyto}${show_input_count},如果 ${object} 在 ${applyto}${show_input_count} 上的 ${dnd_position} 处没有重叠自身,,GML Visual story text
GMStdIfObjAt_Story_9,If ${object} is not overlapping self at ${dnd_position} into ${target}${show_input_count},如果 ${object} 没有将位于 ${dnd_position} 的自身重叠到 ${target}${show_input_count} ,,GML Visual story text
GMStdIfObjAt_Story_10,If ${object} is not overlapping self at ${dnd_position} into ${target} on ${applyto}${show_input_count},如果 ${object} 没有将 ${dnd_position} 处的自身重叠到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdIfObjAt_Story_11,If ${object} is not overlapping self at ${dnd_position} into temp ${target}${show_input_count},如果 ${object} 没有将 ${dnd_position} 处的自身重叠到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdIfObjAt_Story_12,If ${object} is not overlapping self at ${dnd_position} into temp ${target} on ${applyto}${show_input_count},如果 ${object} 没有将 ${dnd_position} 处的自身重叠到 ${applyto}${show_input_count} 上的临时 ${target} 中,,GML Visual story text
GMStdIfColShape_Story_1,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的线相交,,GML Visual story text
GMStdIfColShape_Story_2,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} on ${applyto},如果 ${obj} 与 ${applyto} 上 ${dnd_position1} 到 ${dnd_position2} 处的线相交,,GML Visual story text
GMStdIfColShape_Story_3,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target},如果 ${obj} 与列表 ${target} 中位于 ${dnd_position1} 到 ${dnd_position2} 的线相交,,GML Visual story text
GMStdIfColShape_Story_4,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果 ${obj} 将 ${dnd_position1} 到 ${dnd_position2} 处的线与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_5,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果 ${obj} 与列表TEMP ${target} 中 ${dnd_position1} 到 ${dnd_position2} 处的行相交,,GML Visual story text
GMStdIfColShape_Story_6,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的行相交，则进入 ${applyto} 上的列表临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_7,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的线相交，则为 ${target} ,,GML Visual story text
GMStdIfColShape_Story_8,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的线相交，则为 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdIfColShape_Story_9,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target},如果 ${obj} 与位于 ${dnd_position1} 到 ${dnd_position2} 的线相交，则进入临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_10,If ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的线相交，则为 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_11,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2},如果 ${obj} 与位于 ${dnd_position1} 到 ${dnd_position2} 的矩形相交,,GML Visual story text
GMStdIfColShape_Story_12,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} on ${applyto},如果 ${obj} 与 ${applyto} 上 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交,,GML Visual story text
GMStdIfColShape_Story_13,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target},如果 ${obj} 与列表 ${target} 中 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交,,GML Visual story text
GMStdIfColShape_Story_14,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交，则为 ${applyto} 上的列表 ${target} ,,GML Visual story text
GMStdIfColShape_Story_15,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果 ${obj} 与位于 ${dnd_position1} 到 ${dnd_position2} 的矩形相交，则列表临时为 ${target} ,,GML Visual story text
GMStdIfColShape_Story_16,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交，则为 ${applyto} 上的列表临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_17,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交，则为 ${target} ,,GML Visual story text
GMStdIfColShape_Story_18,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交，则为 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdIfColShape_Story_19,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target},如果 ${obj} 与位于 ${dnd_position1} 到 ${dnd_position2} 的矩形相交，则为临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_20,If ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果 ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的矩形相交，则为 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_21,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2},如果 ${obj} 在 ${dnd_position1} 到 ${dnd_position2} 处与椭圆相交,,GML Visual story text
GMStdIfColShape_Story_22,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} on ${applyto},如果 ${obj} 与 ${applyto} 上的 ${dnd_position1} 到 ${dnd_position2} 处的椭圆相交,,GML Visual story text
GMStdIfColShape_Story_23,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target},如果 ${obj} 与列表 ${target} 中位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交,,GML Visual story text
GMStdIfColShape_Story_24,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},如果 ${obj} 在 ${dnd_position1} 到 ${dnd_position2} 处的椭圆与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_25,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target},如果 ${obj} 与位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交，则列表临时为 ${target} ,,GML Visual story text
GMStdIfColShape_Story_26,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},如果 ${obj} 在 ${dnd_position1} 到 ${dnd_position2} 处的椭圆与 ${applyto} 上的列表临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_27,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target},如果 ${obj} 与位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交，则为 ${target} ,,GML Visual story text
GMStdIfColShape_Story_28,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},如果 ${obj} 在 ${dnd_position1} 到 ${dnd_position2} 处的椭圆与 ${applyto} 上的 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_29,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target},如果 ${obj} 在 ${dnd_position1} 到 ${dnd_position2} 处的椭圆与临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_30,If ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},如果 ${obj} 在 ${dnd_position1} 到 ${dnd_position2} 处的椭圆与 ${applyto} 上的临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_31,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2},否则， ${obj} 与 ${dnd_position1} 到 ${dnd_position2} 处的线相交,,GML Visual story text
GMStdIfColShape_Story_32,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} on ${applyto},否则， ${obj} 与 ${applyto} 上 ${dnd_position1} 处的线与 ${dnd_position2} 相交,,GML Visual story text
GMStdIfColShape_Story_33,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target},如果不是，则 ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的行与列表 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_34,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的线与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_35,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的行与列表TEMP ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_36,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的行与 ${applyto} 上的列表临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_37,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的线与 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_38,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的线与 ${applyto} 上的 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_39,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的行与临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_40,If not ${obj} intersects line at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的线与 ${applyto} 上的临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_41,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2},否则， ${obj} 在 ${dnd_position1} 处与 ${dnd_position2} 处的矩形相交,,GML Visual story text
GMStdIfColShape_Story_42,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} on ${applyto},否则， ${obj} 与 ${applyto} 上${dnd_position tion1}处的矩形与${dnd_position tion2}相交,,GML Visual story text
GMStdIfColShape_Story_43,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target},否则， ${obj} 会将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形相交到列表 ${target} 中,,GML Visual story text
GMStdIfColShape_Story_44,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_45,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形相交到列表TEMP ${target} ,,GML Visual story text
GMStdIfColShape_Story_46,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形相交到 ${applyto} 上的列表临时 ${target} 中,,GML Visual story text
GMStdIfColShape_Story_47,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形与 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_48,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形与 ${applyto} 上的 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_49,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形与临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_50,If not ${obj} intersects rectangle at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的矩形与 ${applyto} 上的临时 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_51,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2},否则， ${obj} 与椭圆在 ${dnd_position1} 到 ${dnd_position2} 相交,,GML Visual story text
GMStdIfColShape_Story_52,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} on ${applyto},否则， ${obj} 与 ${applyto} 上的 ${dnd_position1} 到 ${dnd_position2} 处的椭圆相交,,GML Visual story text
GMStdIfColShape_Story_53,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target},否则， ${obj} 会将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交到列表 ${target} 中,,GML Visual story text
GMStdIfColShape_Story_54,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_55,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交到列表TEMP ${target} ,,GML Visual story text
GMStdIfColShape_Story_56,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into list temp ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交到 ${applyto} 上的列表临时 ${target} 中,,GML Visual story text
GMStdIfColShape_Story_57,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target},否则， ${obj} 会将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交到 ${target} ,,GML Visual story text
GMStdIfColShape_Story_58,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆与 ${applyto} 上的 ${target} 相交,,GML Visual story text
GMStdIfColShape_Story_59,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆相交到临时 ${target} ,,GML Visual story text
GMStdIfColShape_Story_60,If not ${obj} intersects ellipse at ${dnd_position1} to ${dnd_position2} into temp ${target} on ${applyto},否则， ${obj} 将位于 ${dnd_position1} 到 ${dnd_position2} 的椭圆与 ${applyto} 上的临时 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_1,If ${obj} intersects point ${dnd_position},如果 ${obj} 与点 ${dnd_position} 相交,,GML Visual story text
GMStdIfColPoint_Story_2,If ${obj} intersects point ${dnd_position} on ${applyto},如果 ${obj} 与 ${applyto} 上的点 ${dnd_position} 相交,,GML Visual story text
GMStdIfColPoint_Story_3,If ${obj} intersects point ${dnd_position} into list ${target},如果 ${obj} 与列表 ${target} 中的点 ${dnd_position} 相交,,GML Visual story text
GMStdIfColPoint_Story_4,If ${obj} intersects point ${dnd_position} into list ${target} on ${applyto},如果 ${obj} 将点 ${dnd_position} 与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_5,If ${obj} intersects point ${dnd_position} into list temp ${target},如果 ${obj} 将点 ${dnd_position} 相交到列表临时 ${target} ,,GML Visual story text
GMStdIfColPoint_Story_6,If ${obj} intersects point ${dnd_position} into list temp ${target} on ${applyto},如果 ${obj} 与 ${applyto} 上的列表临时 ${target} 中的点 ${dnd_position} 相交,,GML Visual story text
GMStdIfColPoint_Story_7,If ${obj} intersects point ${dnd_position} into ${target},如果 ${obj} 将点 ${dnd_position} 相交到 ${target} ,,GML Visual story text
GMStdIfColPoint_Story_8,If ${obj} intersects point ${dnd_position} into ${target} on ${applyto},如果 ${obj} 将点 ${dnd_position} 与 ${applyto} 上的 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_9,If ${obj} intersects point ${dnd_position} into temp ${target},如果 ${obj} 将点 ${dnd_position} 相交到临时 ${target} ,,GML Visual story text
GMStdIfColPoint_Story_10,If ${obj} intersects point ${dnd_position} into temp ${target} on ${applyto},如果 ${obj} 将点 ${dnd_position} 与 ${applyto} 上的临时 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_11,If not ${obj} intersects point ${dnd_position},如果不是，则 ${obj} 与点 ${dnd_position} 相交,,GML Visual story text
GMStdIfColPoint_Story_12,If not ${obj} intersects point ${dnd_position} on ${applyto},否则， ${obj} 与 ${applyto} 上的点 ${dnd_position} 相交,,GML Visual story text
GMStdIfColPoint_Story_13,If not ${obj} intersects point ${dnd_position} into list ${target},如果不是，则 ${obj} 将点 ${dnd_position} 与列表 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_14,If not ${obj} intersects point ${dnd_position} into list ${target} on ${applyto},否则， ${obj} 会将点 ${dnd_position} 与 ${applyto} 上的列表 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_15,If not ${obj} intersects point ${dnd_position} into list temp ${target},如果不是，则 ${obj} 将点 ${dnd_position} 相交到列表临时 ${target} 中,,GML Visual story text
GMStdIfColPoint_Story_16,If not ${obj} intersects point ${dnd_position} into list temp ${target} on ${applyto},否则，${obj}将点${dnd_position}与${applyto}上的列表临时${target}相交,,GML Visual story text
GMStdIfColPoint_Story_17,If not ${obj} intersects point ${dnd_position} into ${target},否则， ${obj} 会将点 ${dnd_position} 与 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_18,If not ${obj} intersects point ${dnd_position} into ${target} on ${applyto},否则， ${obj} 将点 ${dnd_position} 与 ${applyto} 上的 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_19,If not ${obj} intersects point ${dnd_position} into temp ${target},否则， ${obj} 会将点 ${dnd_position} 与临时 ${target} 相交,,GML Visual story text
GMStdIfColPoint_Story_20,If not ${obj} intersects point ${dnd_position} into temp ${target} on ${applyto},否则， ${obj} 将点 ${dnd_position} 与 ${applyto} 上的临时 ${target} 相交,,GML Visual story text
GMStdDrawSelf_Story_1,Draw self,画自己,,GML Visual story text
GMStdDrawSelf_Story_2,Draw self on ${applyto},在 ${applyto} 上绘制自我,,GML Visual story text
GMStdDrawValue_Story_1,Draw  at ${dnd_position},在 ${dnd_position} 处绘制,,GML Visual story text
GMStdDrawValue_Story_2,Draw  at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处绘制,,GML Visual story text
GMStdDrawValue_Story_3,Draw  ${var} at ${dnd_position},在 ${dnd_position} 处绘制 ${var} ,,GML Visual story text
GMStdDrawValue_Story_4,Draw  ${var} at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处绘制 ${var} ,,GML Visual story text
GMStdDrawValue_Story_5,"Draw ""${caption}"" at ${dnd_position}","在${dnd_position}处绘制"${caption}"",,GML Visual story text
GMStdDrawValue_Story_6,"Draw ""${caption}"" at ${dnd_position} on ${applyto}",在${applyto}上的${dnd_position}处绘制"${caption}",,GML Visual story text
GMStdDrawValue_Story_7,"Draw ""${caption}"" ${var} at ${dnd_position}","在${dnd_position}处绘制"${caption}"${var}",,GML Visual story text
GMStdDrawValue_Story_8,"Draw ""${caption}"" ${var} at ${dnd_position} on ${applyto}","在${applyto}上的${dnd_position}处绘制"${caption}"${var}",,GML Visual story text
GMStdDrawValueTransformed_Story_1,Draw transformed  at ${dnd_position},在 ${dnd_position} 转换的绘图,,GML Visual story text
GMStdDrawValueTransformed_Story_2,Draw transformed  at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处转换的绘图,,GML Visual story text
GMStdDrawValueTransformed_Story_3,Draw transformed  ${var} at ${dnd_position},在 ${dnd_position} 处绘制转换后的 ${var} ,,GML Visual story text
GMStdDrawValueTransformed_Story_4,Draw transformed  ${var} at ${dnd_position} on ${applyto},在 ${applyto} 的 ${dnd_position} 处绘制转换后的 ${var} ,,GML Visual story text
GMStdDrawValueTransformed_Story_5,"Draw transformed ""${caption}"" at ${dnd_position}","在${dnd_position}处绘制转换后的"${caption}",,GML Visual story text
GMStdDrawValueTransformed_Story_6,"Draw transformed ""${caption}"" at ${dnd_position} on ${applyto}",在${applyto}上的${dnd_position}处绘制已转换的"${caption}",,GML Visual story text
GMStdDrawValueTransformed_Story_7,"Draw transformed ""${caption}"" ${var} at ${dnd_position}","在${dnd_position}处绘制转换后的"${caption}"${var}",,GML Visual story text
GMStdDrawValueTransformed_Story_8,"Draw transformed ""${caption}"" ${var} at ${dnd_position} on ${applyto}",在${applyto}的${dnd_position}处绘制已转换的"${caption}"${var}",,GML Visual story text
GMStdDrawSprite_Story_1,Draw sprite ${sprite} frame ${image} at ${dnd_position},在 ${dnd_position} 处绘制精灵 ${sprite} 帧 ${image} ,,GML Visual story text
GMStdDrawSprite_Story_2,Draw sprite ${sprite} frame ${image} at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处绘制精灵 ${spite} 帧 ${image} ,,GML Visual story text
GMStdDrawSpriteExt_Story_1,"Draw transformed sprite ${sprite} frame ${frame} with scale ${xscale},${yscale} and rotation ${rot}","使用比例${xScale}、${yscale}和旋转${rott}绘制变换后的精灵${spite}帧${frame}",,GML Visual story text
GMStdDrawSpriteExt_Story_2,"Draw transformed sprite ${sprite} frame ${frame} with scale ${xscale},${yscale} and rotation ${rot} on ${applyto}","在${applyto}上绘制具有比例${xScale}、${yscale}和旋转${rott}的变换精灵${spite}帧${frame}",,GML Visual story text
GMStdDrawSpritesStacked_Story_1,Draw sprite ${sprite} in ${number} rows at ${dnd_position},在 ${dnd_position} 处的 ${number} 行中绘制精灵 ${sprite} ,,GML Visual story text
GMStdDrawSpritesStacked_Story_2,Draw sprite ${sprite} in ${number} rows at ${dnd_position} on ${applyto},在 ${applyto} 的 ${dnd_position} 处绘制 ${number} 行中的精灵 ${sprite} ,,GML Visual story text
GMStdDrawSpritesStacked_Story_3,Draw sprite ${sprite} in ${number} columns at ${dnd_position},在 ${dnd_position} 处的 ${number} 列中绘制精灵 ${sprite} ,,GML Visual story text
GMStdDrawSpritesStacked_Story_4,Draw sprite ${sprite} in ${number} columns at ${dnd_position} on ${applyto},在 ${applyto} 上 ${dnd_position} 处的 ${number} 列中绘制精灵 ${sprite} ,,GML Visual story text
GMStdDrawRectangle_Story_1,Draw rectangle from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的矩形,,GML Visual story text
GMStdDrawRectangle_Story_2,Draw rectangle from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的矩形,,GML Visual story text
GMStdDrawGradientRect_Story_1,Draw gradient rectangular outline from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变矩形轮廓,,GML Visual story text
GMStdDrawGradientRect_Story_2,Draw gradient rectangular outline from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变矩形轮廓,,GML Visual story text
GMStdDrawGradientRect_Story_3,Draw gradient rectangle from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变矩形,,GML Visual story text
GMStdDrawGradientRect_Story_4,Draw gradient rectangle from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变矩形,,GML Visual story text
GMStdDrawEllipse_Story_1,Draw ellipse from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的椭圆,,GML Visual story text
GMStdDrawEllipse_Story_2,Draw ellipse from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的椭圆,,GML Visual story text
GMStdDrawGradientEllipse_Story_1,Draw gradient elliptical outline from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变椭圆轮廓,,GML Visual story text
GMStdDrawGradientEllipse_Story_2,Draw gradient elliptical outline from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变椭圆轮廓,,GML Visual story text
GMStdDrawGradientEllipse_Story_3,Draw gradient ellipse from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变椭圆,,GML Visual story text
GMStdDrawGradientEllipse_Story_4,Draw gradient ellipse from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的渐变椭圆,,GML Visual story text
GMStdDrawLine_Story_1,Draw line from ${dnd_position1} to ${dnd_position2},从 ${dnd_position1} 到 ${dnd_position2} 绘制直线,,GML Visual story text
GMStdDrawLine_Story_2,Draw line from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的线,,GML Visual story text
GMStdDrawHealthbar_Story_1,Draw healthbar from ${dnd_position1} to ${dnd_position2} with value ${value},使用值 ${value} 从 ${dnd_position1} 到 ${dnd_position2} 绘制健康条,,GML Visual story text
GMStdDrawHealthbar_Story_2,Draw healthbar from ${dnd_position1} to ${dnd_position2} with value ${value} on ${applyto},在 ${applyto} 上绘制从 ${dnd_position1} 到 ${dnd_position2} 的健康条，值为 ${value} ,,GML Visual story text
GMStdDrawInstanceScore_Story_1,Draw score at ${dnd_position},在 ${dnd_position} 处抽签得分,,GML Visual story text
GMStdDrawInstanceScore_Story_2,"Draw score at ${dnd_position} with caption ""${caption}""","在${dnd_position}处绘制分数，标题为"${caption}"",,GML Visual story text
GMStdDrawInstanceScore_Story_3,Draw ${applyto}'s score at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处绘制 ${applyto} 的分数,,GML Visual story text
GMStdDrawInstanceScore_Story_4,"Draw ${applyto}'s score at ${dnd_position} with caption ""${caption}"" on ${applyto}",在${applyto}上的${dnd_position}处绘制${applyto}的分数，标题为"${caption}",,GML Visual story text
GMStdDrawInstanceHealth_Story_1,Draw healthbar from ${dnd_position1} to ${dnd_position2},绘制从 ${dnd_position1} 到 ${dnd_position2} 的健康条,,GML Visual story text
GMStdDrawInstanceHealth_Story_2,Draw ${applyto}'s healthbar from ${dnd_position1} to ${dnd_position2} on ${applyto},在 ${applyto} 上将 ${applyto} 的健康条从 ${dnd_position1} 绘制到 ${dnd_position2} ,,GML Visual story text
GMStdDrawInstanceLives_Story_1,Draw lives in a row at ${dnd_position},在 ${dnd_position} 画出一排生命,,GML Visual story text
GMStdDrawInstanceLives_Story_2,Draw lives in a column at ${dnd_position},在 ${dnd_position} 的列中绘制生命,,GML Visual story text
GMStdDrawInstanceLives_Story_3,Draw ${applyto}'s lives in a row at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处连续绘制 ${applyto} 的生命,,GML Visual story text
GMStdDrawInstanceLives_Story_4,Draw ${applyto}'s lives in a column at ${dnd_position} on ${applyto},在 ${applyto} 上 ${dnd_position} 处的列中绘制 ${applyto} 的生活,,GML Visual story text
GMStdSetColor_Story_1,Set draw color to ${color},将绘制颜色设置为 ${color} ,,GML Visual story text
GMStdSetColor_Story_2,Set draw color to ${color} on ${applyto},在 ${applyto} 上将绘制颜色设置为 ${color} ,,GML Visual story text
GMStdGetColor_Story_1,Get draw color into ${var},获取将颜色绘制到 ${var} 中,,GML Visual story text
GMStdGetColor_Story_2,Get draw color into ${var} on ${applyto},获取在 ${applyto} 上将颜色绘制到 ${var} 中,,GML Visual story text
GMStdAlpha_Story_1,Set drawing alpha channel to ${alpha},将绘图 Alpha 通道设置为 ${alpha} ,,GML Visual story text
GMStdAlpha_Story_2,Set drawing alpha channel to ${alpha} on ${applyto},在 ${applyto} 上将绘图 Alpha 通道设置为 ${alpha} ,,GML Visual story text
GMStdGetAlpha_Story_1,Get drawing alpha channel into ${var},将 Alpha 通道绘制到 ${var} ,,GML Visual story text
GMStdGetAlpha_Story_2,Get drawing alpha channel into ${var} on ${applyto},在 ${applyto} 上将 Alpha 通道绘制到 ${var} ,,GML Visual story text
GMStdSetFont_Story_1,Set font to ${font},将字体设置为 ${font} ,,GML Visual story text
GMStdSetFont_Story_2,Set font to ${font} on ${applyto},在 ${applyto} 上将字体设置为 ${font} ,,GML Visual story text
GMStdGetFont_Story_1,Get draw font into ${var},将字体绘制到 ${var} ,,GML Visual story text
GMStdGetFont_Story_2,Get draw font into ${var} on ${applyto},在${applyto}上将字体绘制到${var},,GML Visual story text
GMStdSetAlignment_Story_1,Set text alignment to ${halign} and ${valign},"将文本对齐方式设置为 ${halign} 和 ${valign}",,GML Visual story text
GMStdSetAlignment_Story_2,Set text alignment to ${halign} and ${valign} on ${applyto},"在 ${applyto} 上将文本对齐方式设置为 ${halign} 和 ${valign}",,GML Visual story text
GMStdGetTextAlign_Story_1,Get horizontal text alignment into ${var},将文本水平对齐到 ${var} ,,GML Visual story text
GMStdGetTextAlign_Story_2,Get horizontal text alignment into ${var} on ${applyto},在 ${applyto} 上将文本水平对齐到 ${var} ,,GML Visual story text
GMStdGetTextAlign_Story_3,Get vertical text alignment into ${var},将垂直文本对齐到 ${var} ,,GML Visual story text
GMStdGetTextAlign_Story_4,Get vertical text alignment into ${var} on ${applyto},将垂直文本对齐到 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdTileSetAtPixel_Story_1,Set tile on layer ${layername} at ${dnd_position} to ${tile},将图层 ${layername} 上 ${dnd_position} 处的切片设置为 ${tile} ,,GML Visual story text
GMStdTileSetAtPixel_Story_2,Set tile on layer ${layername} at ${dnd_position} to ${tile} on ${applyto},将 ${dnd_position} 处的图层 ${layername} 上的切片设置为 ${applyto} 上的 ${tile} ,,GML Visual story text
GMStdTileGetAtPixel_Story_1,Get tile index at ${dnd_position} on layer ${layername} into ${var},将图层 ${layername} 上 ${dnd_position} 处的切片索引获取到 ${var} ,,GML Visual story text
GMStdTileGetAtPixel_Story_2,Get tile index at ${dnd_position} on layer ${layername} into ${var} on ${applyto},将图层 ${layername} 上 ${dnd_position} 处的切片索引获取到 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdTileGetAtPixel_Story_3,Get tile index at ${dnd_position} on layer ${layername} into temp ${var},将图层 ${layername} 上 ${dnd_position} 处的切片索引获取到临时 ${var} ,,GML Visual story text
GMStdTileGetAtPixel_Story_4,Get tile index at ${dnd_position} on layer ${layername} into temp ${var} on ${applyto},将图层 ${layername} 上 ${dnd_position} 处的切片索引获取到 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdTileSetInCell_Story_1,"Set tile on layer ${layername} in cell ${x},${y} to ${tile}",将像元${x}、${y}中图层${layername}的切片设置为${TILE},,GML Visual story text
GMStdTileSetInCell_Story_2,"Set tile on layer ${layername} in cell ${x},${y} to ${tile} on ${applyto}",将像元${x}、${y}中图层${layername}的切片设置为${applyto}上的${tile},,GML Visual story text
GMStdTileGetInCell_Story_1,"Get tile index in cell ${x},${y} on layer ${layername} into ${var}",将图层${layername}上的像元${x}、${y}中的切片索引获取到${var},,GML Visual story text
GMStdTileGetInCell_Story_2,"Get tile index in cell ${x},${y} on layer ${layername} into ${var} on ${applyto}",将图层${layername}上的像元${x}、${y}中的切片索引获取到${applyto}上的${var},,GML Visual story text
GMStdTileGetInCell_Story_3,"Get tile index in cell ${x},${y} on layer ${layername} into temp ${var}",将图层${layername}上的像元${x}、${y}中的切片索引获取到临时${var},,GML Visual story text
GMStdTileGetInCell_Story_4,"Get tile index in cell ${x},${y} on layer ${layername} into temp ${var} on ${applyto}",将图层${layername}上的像元${x}、${y}中的切片索引获取到${applyto}上的临时${var},,GML Visual story text
GMStdTileSetTileSet_Story_1,Set tile set ${tileset} on layer ${layername},在图层 ${layername} 上设置切片集 ${tileset} ,,GML Visual story text
GMStdTileSetTileSet_Story_2,Set tile set ${tileset} on layer ${layername} on ${applyto},在 ${applyto} 的图层 ${layername} 上设置切片集 ${tileset} ,,GML Visual story text
GMStdTileGetVar_Story_1,Get tilemap x on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片地图x获取到 ${target}${show_input_count} 中,,GML Visual story text
GMStdTileGetVar_Story_2,Get tilemap x on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图x获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_3,Get tilemap x on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片地图x获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_4,Get tilemap x on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图x获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_5,Get tilemap y on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片y转换为 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_6,Get tilemap y on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片y获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_7,Get tilemap y on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片地图y转换为临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_8,Get tilemap y on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图y转换为 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_9,Get tilemap width on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片地图宽度获取到 ${target}${show_input_count} 中,,GML Visual story text
GMStdTileGetVar_Story_10,Get tilemap width on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图宽度获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_11,Get tilemap width on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片地图宽度获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_12,Get tilemap width on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图宽度获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_13,Get tilemap height on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片高度获取到 ${target}${show_input_count} 中,,GML Visual story text
GMStdTileGetVar_Story_14,Get tilemap height on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片高度获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_15,Get tilemap height on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片图高度获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_16,Get tilemap height on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片图高度获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_17,Get tilemap tile width on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片宽度获取到 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_18,Get tilemap tile width on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片宽度获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_19,Get tilemap tile width on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片宽度获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_20,Get tilemap tile width on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片宽度获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_21,Get tilemap tile height on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片高度获取到 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_22,Get tilemap tile height on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片高度获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_23,Get tilemap tile height on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片高度获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_24,Get tilemap tile height on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片高度获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_25,Get tilemap resource on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片地图资源获取到 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_26,Get tilemap resource on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图资源获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_27,Get tilemap resource on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片地图资源获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_28,Get tilemap resource on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图资源获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_29,Get tilemap frame on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片图框获取到 ${target}${show_input_count} 中,,GML Visual story text
GMStdTileGetVar_Story_30,Get tilemap frame on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片图框获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_31,Get tilemap frame on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片图框获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_32,Get tilemap frame on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片图框获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_33,Get tilemap mask on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片掩膜获取到 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_34,Get tilemap mask on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片掩膜获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_35,Get tilemap mask on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片掩膜获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_36,Get tilemap mask on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图掩膜获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_37,Get tilemap global mask on layer ${layername} into ${target}${show_input_count},将图层 ${layername} 上的切片地图全局掩码获取到 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_38,Get tilemap global mask on layer ${layername} into ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片全局掩码获取到 ${applyto}${show_input_count} 上的 ${target} ,,GML Visual story text
GMStdTileGetVar_Story_39,Get tilemap global mask on layer ${layername} into temp ${target}${show_input_count},将图层 ${layername} 上的切片地图全局掩码获取到临时 ${target}${show_input_count} ,,GML Visual story text
GMStdTileGetVar_Story_40,Get tilemap global mask on layer ${layername} into temp ${target} on ${applyto}${show_input_count},将图层 ${layername} 上的切片地图全局掩码获取到 ${applyto}${show_input_count} 上的临时 ${target} ,,GML Visual story text
GMStdTileSetElmPixel_Story_1,Set tile data at ${dnd_position} on layer ${layername} to ${element},将图层 ${layername} 上 ${dnd_position} 处的切片数据设置为 ${element} ,,GML Visual story text
GMStdTileSetElmPixel_Story_2,Set tile data at ${dnd_position} on layer ${layername} to ${element} on ${applyto},将图层 ${layername} 上 ${dnd_position} 处的切片数据设置为 ${applyto} 上的 ${element} ,,GML Visual story text
GMStdTileGetElmPixel_Story_1,Get tile data at ${dnd_position} on layer ${layername} into ${var},将图层 ${layername} 上 ${dnd_position} 处的切片数据获取到 ${var} ,,GML Visual story text
GMStdTileGetElmPixel_Story_2,Get tile data at ${dnd_position} on layer ${layername} into ${var} on ${applyto},将图层 ${layername} 上 ${dnd_position} 处的切片数据获取到 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdTileGetElmPixel_Story_3,Get tile data at ${dnd_position} on layer ${layername} into temp ${var},将图层 ${layername} 上 ${dnd_position} 处的切片数据获取到临时 ${var} ,,GML Visual story text
GMStdTileGetElmPixel_Story_4,Get tile data at ${dnd_position} on layer ${layername} into temp ${var} on ${applyto},将图层 ${layername} 上 ${dnd_position} 处的切片数据获取到 ${applyto} 上的临时 ${var} 中,,GML Visual story text
GMStdTileSetElm_Story_1,"Set tile data in cell ${x},${y} on layer ${layername} to ${element}","将图层${layername}上的像元${x}、${y}中的切片数据设置为${element}",,GML Visual story text
GMStdTileSetElm_Story_2,"Set tile data in cell ${x},${y} on layer ${layername} to ${element} on ${applyto}","将图层${layername}上的像元${x}、${y}中的切片数据设置为${applyto}上的${element}",,GML Visual story text
GMStdTileGetElm_Story_1,"Get tile data in cell ${x},${y} on layer ${layername} into ${var}","将图层${layername}上的像元${x}、${y}中的切片数据获取到${var}",,GML Visual story text
GMStdTileGetElm_Story_2,"Get tile data in cell ${x},${y} on layer ${layername} into ${var} on ${applyto}","将图层${layername}上的像元${x}、${y}中的切片数据获取到${applyto}上的${var}",,GML Visual story text
GMStdTileGetElm_Story_3,"Get tile data in cell ${x},${y} on layer ${layername} into temp ${var}","将图层${layername}上的像元${x}、${y}中的切片数据获取到临时${var}",,GML Visual story text
GMStdTileGetElm_Story_4,"Get tile data in cell ${x},${y} on layer ${layername} into temp ${var} on ${applyto}","将图层${layername}上的像元${x}、${y}中的切片数据获取到${applyto}上的临时${var}",,GML Visual story text
GMStdTileTransform_Story_1,Flip tile data ${tile},翻转切片数据 ${tile} ,,GML Visual story text
GMStdTileTransform_Story_2,Flip tile data ${tile} on ${applyto},在 ${applyto} 上翻转切片数据 ${tile} ,,GML Visual story text
GMStdTileTransform_Story_3,Mirror tile data ${tile},镜像切片数据 ${tile} ,,GML Visual story text
GMStdTileTransform_Story_4,Mirror tile data ${tile} on ${applyto}, ${applyto} 上的镜像切片数据 ${tile} ,,GML Visual story text
GMStdTileTransform_Story_5,Rotate tile data ${tile},旋转切片数据 ${tile} ,,GML Visual story text
GMStdTileTransform_Story_6,Rotate tile data ${tile} on ${applyto},在 ${applyto} 上旋转切片数据 ${tile} ,,GML Visual story text
GMStdTileGetTransform_Story_1,Get flip of tile data ${tile} into ${var},将切片数据 ${tile} 翻转到 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_2,Get flip of tile data ${tile} into ${var} on ${applyto},在 ${applyto} 上将切片数据 ${tile} 翻转到 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_3,Get flip of tile data ${tile} into temp ${var},将切片数据 ${tile} 翻转到临时 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_4,Get flip of tile data ${tile} into temp ${var} on ${applyto},将切片数据 ${tile} 翻转到 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_5,Get mirror of tile data ${tile} into ${var},将切片数据 ${tile} 的镜像获取到 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_6,Get mirror of tile data ${tile} into ${var} on ${applyto},将切片数据 ${tile} 镜像到 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_7,Get mirror of tile data ${tile} into temp ${var},将切片数据 ${tile} 的镜像获取到临时 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_8,Get mirror of tile data ${tile} into temp ${var} on ${applyto},将切片数据 ${tile} 的镜像获取到 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_9,Get rotate of tile data ${tile} into ${var},将切片数据 ${tile} 旋转到 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_10,Get rotate of tile data ${tile} into ${var} on ${applyto},在 ${applyto} 上将切片数据 ${tile} 旋转到 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_11,Get rotate of tile data ${tile} into temp ${var},将切片数据 ${tile} 旋转到临时 ${var} ,,GML Visual story text
GMStdTileGetTransform_Story_12,Get rotate of tile data ${tile} into temp ${var} on ${applyto},将切片数据 ${tile} 旋转到 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdPlayAudio_Story_1,Play audio ${soundid} looped and assign id to ${target},播放音频 ${sounid} 循环并将ID分配给 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_2,Play audio ${soundid} looped and assign id to ${target} on ${applyto},播放音频 ${sounid} 循环，并将ID分配给 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_3,Play audio ${soundid} looped,播放音频 ${sounid} 循环,,GML Visual story text
GMStdPlayAudio_Story_4,Play audio ${soundid} looped on ${applyto},播放音频 ${sounid} 在 ${applyto} 上循环,,GML Visual story text
GMStdPlayAudio_Story_5,Play audio ${soundid} looped and assign id to temp ${target},播放音频 ${sounid} 循环，并将ID分配给临时 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_6,Play audio ${soundid} looped and assign id to temp ${target} on ${applyto},播放音频 ${sounid} 循环，并将ID分配给 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_7,Play audio ${soundid} and assign id to ${target},播放音频 ${sounid} 并将id分配给 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_8,Play audio ${soundid} and assign id to ${target} on ${applyto},播放音频 ${sounid} 并在 ${applyto} 上将ID分配给 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_9,Play audio ${soundid},播放音频 ${sounid} ,,GML Visual story text
GMStdPlayAudio_Story_10,Play audio ${soundid} on ${applyto},在 ${applyto} 上播放音频 ${soundo} ,,GML Visual story text
GMStdPlayAudio_Story_11,Play audio ${soundid} and assign id to temp ${target},播放音频 ${sounid} 并将ID分配给临时 ${target} ,,GML Visual story text
GMStdPlayAudio_Story_12,Play audio ${soundid} and assign id to temp ${target} on ${applyto},播放音频 ${sounid} 并将ID分配给 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdStopAudio_Story_1,Stop audio ${soundid},停止音频 ${sounid} ,,GML Visual story text
GMStdStopAudio_Story_2,Stop audio ${soundid} on ${applyto},停止 ${applyto} 上的音频 ${soundo} ,,GML Visual story text
GMStdStopAllAudio_Story_1,Stop all audio,停止所有音频,,GML Visual story text
GMStdStopAllAudio_Story_2,Stop all audio on ${applyto},停止 ${applyto} 上的所有音频,,GML Visual story text
GMStdPauseAudio_Story_1,Pause audio ${sound},暂停音频 ${sound} ,,GML Visual story text
GMStdPauseAudio_Story_2,Pause audio ${sound} on ${applyto},暂停 ${applyto} 上的音频 ${sound} ,,GML Visual story text
GMStdPauseAllAudio_Story_1,Pause all audio,暂停所有音频,,GML Visual story text
GMStdPauseAllAudio_Story_2,Pause all audio on ${applyto},暂停 ${applyto} 上的所有音频,,GML Visual story text
GMStdResumeAudio_Story_1,Resume audio ${sound},恢复音频 ${sound} ,,GML Visual story text
GMStdResumeAudio_Story_2,Resume audio ${sound} on ${applyto},在 ${applyto} 上恢复音频 ${sound} ,,GML Visual story text
GMStdResumeAllAudio_Story_1,Resume all audio,恢复所有音频,,GML Visual story text
GMStdResumeAllAudio_Story_2,Resume all audio on ${applyto},恢复 ${applyto} 上的所有音频,,GML Visual story text
GMStdAudioSetPosition_Story_1,Set audio position of ${sound} to ${time} seconds,将 ${ound} 的音频位置设置为 ${time} 秒,,GML Visual story text
GMStdAudioSetPosition_Story_2,Set audio position of ${sound} to ${time} seconds on ${applyto},在 ${applyto} 上将 ${ound} 的音频位置设置为 ${time} 秒,,GML Visual story text
GMStdAudioGetLength_Story_1,Get length of audio ${sound} into ${var},将音频 ${ound} 的长度获取到 ${var} 中,,GML Visual story text
GMStdAudioGetLength_Story_2,Get length of audio ${sound} into ${var} on ${applyto},在 ${applyto} 上将音频 ${ound} 的长度获取到 ${var} 中,,GML Visual story text
GMStdAudioGetLength_Story_3,Get length of audio ${sound} into temp ${var},将音频 ${sound} 的长度获取到临时 ${var} ,,GML Visual story text
GMStdAudioGetLength_Story_4,Get length of audio ${sound} into temp ${var} on ${applyto},在 ${applyto} 上将音频 ${ound} 的长度获取到临时 ${var} 中,,GML Visual story text
GMStdAudioSetPitch_Story_1,Set pitch of audio ${sound} to ${pitch},将音频 ${sound} 的音调设置为 ${pitch} ,,GML Visual story text
GMStdAudioSetPitch_Story_2,Set pitch of audio ${sound} to ${pitch} on ${applyto},在 ${applyto} 上将音频 ${sound} 的音调设置为 ${pitch} ,,GML Visual story text
GMStdAudioGetPitch_Story_1,Get pitch of audio ${sound} into ${var},将音频 ${sound} 的音调转换为 ${var} ,,GML Visual story text
GMStdAudioGetPitch_Story_2,Get pitch of audio ${sound} into ${var} on ${applyto},在 ${applyto} 上获取音频 ${ound} 到 ${var} 的音调,,GML Visual story text
GMStdAudioGetPitch_Story_3,Get pitch of audio ${sound} into temp ${var},将音频 ${sound} 的音调转换为温度 ${var} ,,GML Visual story text
GMStdAudioGetPitch_Story_4,Get pitch of audio ${sound} into temp ${var} on ${applyto},在 ${applyto} 上获取音频 ${ound} 到临时 ${var} 的音调,,GML Visual story text
GMStdAudioSetVolume_Story_1,Set volume of audio ${sound} to ${volume},将音频 ${sound} 的音量设置为 ${volume} ,,GML Visual story text
GMStdAudioSetVolume_Story_2,Set volume of audio ${sound} to ${volume} over ${time} milliseconds,"在 ${time} 毫秒内将音频 ${sound} 的音量设置为 ${volume}",,GML Visual story text
GMStdAudioSetVolume_Story_3,Set volume of audio ${sound} to ${volume} on ${applyto},在 ${applyto} 上将音频 ${ound} 的音量设置为 ${volume} ,,GML Visual story text
GMStdAudioSetVolume_Story_4,Set volume of audio ${sound} to ${volume} over ${time} milliseconds on ${applyto},"在 ${applyto} 上将音频 ${sound} 的音量设置为 ${volume} 超过 ${time} 毫秒",,GML Visual story text
GMStdAudioGetVolume_Story_1,Get volume of audio ${sound} into ${var},将音频 ${sound} 的音量放入 ${var} ,,GML Visual story text
GMStdAudioGetVolume_Story_2,Get volume of audio ${sound} into ${var} on ${applyto},将 ${applyto} 上的音频 ${ound} 音量放入 ${var} ,,GML Visual story text
GMStdAudioGetVolume_Story_3,Get volume of audio ${sound} into temp ${var},将音频 ${sound} 的音量设置为临时 ${var} ,,GML Visual story text
GMStdAudioGetVolume_Story_4,Get volume of audio ${sound} into temp ${var} on ${applyto},在 ${applyto} 上将音频 ${ound} 的音量放入临时 ${var} ,,GML Visual story text
GMStdAudoSetMasterVolume_Story_1,Set master volume to ${volume},将主卷设置为 ${volume} ,,GML Visual story text
GMStdAudoSetMasterVolume_Story_2,Set master volume to ${volume} on ${applyto},在 ${applyto} 上将主卷设置为 ${volume} ,,GML Visual story text
GMStdAudioGetMasterVolume_Story_1,Get master volume into ${var},将主卷放入 ${var} ,,GML Visual story text
GMStdAudioGetMasterVolume_Story_2,Get master volume into ${var} on ${applyto},将主卷放入 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdAudioGetMasterVolume_Story_3,Get master volume into temp ${var},将主卷获取到临时 ${var} ,,GML Visual story text
GMStdAudioGetMasterVolume_Story_4,Get master volume into temp ${var} on ${applyto},将主卷放入 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdIfAudioPlaying_Story_1,If audio ${soundid} is not playing,如果音频 ${sounid} 未播放,,GML Visual story text
GMStdIfAudioPlaying_Story_2,If audio ${soundid} is not playing on ${applyto},如果音频 ${sounid} 未在 ${applyto} 上播放,,GML Visual story text
GMStdIfAudioPlaying_Story_3,If audio ${soundid} is playing,如果正在播放音频 ${sounid} ,,GML Visual story text
GMStdIfAudioPlaying_Story_4,If audio ${soundid} is playing on ${applyto},如果音频 ${sounid} 正在 ${applyto} 上播放,,GML Visual story text
GMStdIfAudioPaused_Story_1,If audio ${soundid} is not paused,如果音频 ${sounid} 未暂停,,GML Visual story text
GMStdIfAudioPaused_Story_2,If audio ${soundid} is not paused on ${applyto},如果音频 ${sounid} 在 ${applyto} 上未暂停,,GML Visual story text
GMStdIfAudioPaused_Story_3,If audio ${soundid} is paused,如果暂停音频 ${sounid} ,,GML Visual story text
GMStdIfAudioPaused_Story_4,If audio ${soundid} is paused on ${applyto},如果在 ${applyto} 上暂停音频 ${sounid} ,,GML Visual story text
GMStdLoop_Story,Loop,循环,,GML Visual story text
GMStdRepeat_Story_1,Repeat ${times} times,重复 ${times} 次,,GML Visual story text
GMStdRepeat_Story_2,Repeat ${times} times on ${applyto},在 ${applyto} 上重复 ${times} 次,,GML Visual story text
GMStdWhileLoop_Story_1,While ${var} is not equal to ${value},而 ${var} 不等于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_2,While ${var} is not equal to ${value} on ${applyto},而 ${var} 不等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_3,While ${var} is not less than ${value},而 ${var} 不小于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_4,While ${var} is not less than ${value} on ${applyto},而 ${var} 在 ${applyto} 上不小于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_5,While ${var} is not greater than ${value},而 ${var} 不大于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_6,While ${var} is not greater than ${value} on ${applyto},而 ${var} 在 ${applyto} 上不大于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_7,While ${var} is not greater than or equal to ${value},而 ${var} 不大于或等于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_8,While ${var} is not greater than or equal to ${value} on ${applyto},而 ${var} 不大于或等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_9,While ${var} is not less than or equal to ${value},而 ${var} 不小于或等于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_10,While ${var} is not less than or equal to ${value} on ${applyto},而 ${var} 不小于或等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_11,While ${var} is equal to ${value},而 ${var} 等于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_12,While ${var} is equal to ${value} on ${applyto},而 ${var} 等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_13,While ${var} is less than ${value},而 ${var} 小于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_14,While ${var} is less than ${value} on ${applyto},而 ${var} 在 ${applyto} 上小于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_15,While ${var} is greater than ${value},当 ${var} 大于 ${value} 时,,GML Visual story text
GMStdWhileLoop_Story_16,While ${var} is greater than ${value} on ${applyto},而 ${var} 在 ${applyto} 上大于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_17,While ${var} is greater than or equal to ${value},而 ${var} 大于或等于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_18,While ${var} is greater than or equal to ${value} on ${applyto},而 ${var} 大于或等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_19,While ${var} is less than or equal to ${value},而 ${var} 小于或等于 ${value} ,,GML Visual story text
GMStdWhileLoop_Story_20,While ${var} is less than or equal to ${value} on ${applyto},而 ${var} 小于或等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdForLoop_Story_1,"For ${init}, while ${cond} do ${expr}",对于${init}，而${cond}执行${expr},,GML Visual story text
GMStdForLoop_Story_2,"For ${init}, while ${cond} do ${expr} on ${applyto}",对于${init}，而${cond}在${applyto}上执行${expr},,GML Visual story text
GMStdBreak_Story,Break,中断,,GML Visual story text
GMStdSwitch_Story_1,Switch ${expr},交换机 ${expr} ,,GML Visual story text
GMStdSwitch_Story_2,Switch ${expr} on ${applyto}, ${applyto} 上的交换机 ${expr} ,,GML Visual story text
GMStdCase_Story_1,Case: ${const},案例： ${const} ,,GML Visual story text
GMStdDefault_Story,Default,默认设置,,GML Visual story text
GMStdCreateList_Story_1,Set a new list to ${var}${show_input_count},将新列表设置为 ${var}${show_input_count} ,,GML Visual story text
GMStdCreateList_Story_2,Set a new list to ${var} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上将新列表设置为 ${var} ,,GML Visual story text
GMStdCreateList_Story_3,Set a new list to temp ${var}${show_input_count},将新列表设置为临时 ${var}${show_input_count} ,,GML Visual story text
GMStdCreateList_Story_4,Set a new list to temp ${var} on ${applyto}${show_input_count},将新列表设置为 ${applyto}${show_input_count} 上的临时 ${var} ,,GML Visual story text
GMStdCreateMap_Story_1,Set a new map to ${var}${show_input_count},将新地图设置为 ${var}${show_input_count} ,,GML Visual story text
GMStdCreateMap_Story_2,Set a new map to ${var} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上将新地图设置为 ${var} ,,GML Visual story text
GMStdCreateMap_Story_3,Set a new map to temp ${var}${show_input_count},将新地图设置为临时 ${var}${show_input_count} ,,GML Visual story text
GMStdCreateMap_Story_4,Set a new map to temp ${var} on ${applyto}${show_input_count},将新地图设置为 ${applyto}${show_input_count} 上的临时 ${var} ,,GML Visual story text
GMStdCreateGrid_Story_1,"Set a new grid with size ${width},${height} to ${var}${show_input_count}","将大小为${width}、${high}至${var}的新网格设置为${show_input_count}",,GML Visual story text
GMStdCreateGrid_Story_2,"Set a new grid with size ${width},${height} to ${var} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上设置大小为${width}、${high}至${var}的新网格",,GML Visual story text
GMStdCreateGrid_Story_3,"Set a new grid with size ${width},${height} to temp ${var}${show_input_count}","将大小为${width}、${Height}的新网格设置为临时${var}${show_input_count}",,GML Visual story text
GMStdCreateGrid_Story_4,"Set a new grid with size ${width},${height} to temp ${var} on ${applyto}${show_input_count}","在${applyto}${show_input_count}上将大小为${width}、${Height}的新网格设置为临时${var}",,GML Visual story text
GMStdCreateStack_Story_1,Set a new stack to ${var}${show_input_count},将新堆栈设置为 ${var}${show_input_count} ,,GML Visual story text
GMStdCreateStack_Story_2,Set a new stack to ${var} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上将新堆栈设置为 ${var} ,,GML Visual story text
GMStdCreateStack_Story_3,Set a new stack to temp ${var}${show_input_count},将新堆栈设置为临时 ${var}${show_input_count} ,,GML Visual story text
GMStdCreateStack_Story_4,Set a new stack to temp ${var} on ${applyto}${show_input_count},将新堆栈设置为 ${applyto}${show_input_count} 上的临时 ${var} ,,GML Visual story text
GMStdDSClear_Story_1,Clear list in ${var}${show_input_count},清除 ${var}${show_input_count} 中的列表,,GML Visual story text
GMStdDSClear_Story_2,Clear list in ${var} on ${applyto}${show_input_count},清除 ${applyto}${show_input_count} 上 ${var} 中的列表,,GML Visual story text
GMStdDSClear_Story_3,Clear map in ${var}${show_input_count},清除 ${var}${show_input_count} 中的映射,,GML Visual story text
GMStdDSClear_Story_4,Clear map in ${var} on ${applyto}${show_input_count},清除 ${applyto}${show_input_count} 上 ${var} 中的映射,,GML Visual story text
GMStdDSClear_Story_5,Clear grid in ${var}${show_input_count},清除 ${var}${show_input_count} 中的格网,,GML Visual story text
GMStdDSClear_Story_6,Clear grid in ${var} on ${applyto}${show_input_count},清除 ${applyto}${show_input_count} 上 ${var} 中的格网,,GML Visual story text
GMStdDSClear_Story_7,Clear stack in ${var}${show_input_count},清除 ${var}${show_input_count} 中的堆栈,,GML Visual story text
GMStdDSClear_Story_8,Clear stack in ${var} on ${applyto}${show_input_count},清除 ${applyto}${show_input_count} 上 ${var} 中的堆栈,,GML Visual story text
GMStdDSFree_Story_1,Free list ${var} from memory${show_input_count},内存${show_input_count} 中的空闲列表 ${var} ,,GML Visual story text
GMStdDSFree_Story_2,Free list ${var} from memory on ${applyto}${show_input_count}, ${applyto}${show_input_count} 上内存中的空闲列表 ${var} ,,GML Visual story text
GMStdDSFree_Story_3,Free map ${var} from memory${show_input_count},从内存${show_input_count} 释放映射 ${var} ,,GML Visual story text
GMStdDSFree_Story_4,Free map ${var} from memory on ${applyto}${show_input_count},从 ${applyto}${show_input_count} 上的内存释放映射 ${var} ,,GML Visual story text
GMStdDSFree_Story_5,Free grid ${var} from memory${show_input_count},从内存${show_input_count} 释放网格 ${var} ,,GML Visual story text
GMStdDSFree_Story_6,Free grid ${var} from memory on ${applyto}${show_input_count},从 ${applyto}${show_input_count} 上的内存中释放网格 ${var} ,,GML Visual story text
GMStdDSFree_Story_7,Free stack ${var} from memory${show_input_count},从内存${show_input_count} 释放堆栈 ${var} ,,GML Visual story text
GMStdDSFree_Story_8,Free stack ${var} from memory on ${applyto}${show_input_count},从 ${applyto}${show_input_count} 上的内存释放堆栈 ${var} ,,GML Visual story text
GMStdListAdd_Story_1,Add ${value} to list ${var}${show_input_count},将 ${value} 添加到列表 ${var}${show_input_count} ,,GML Visual story text
GMStdListAdd_Story_2,Add ${value} to list ${var} on ${applyto}${show_input_count},将 ${value} 添加到 ${applyto}${show_input_count} 上的列表 ${var} ,,GML Visual story text
GMStdListRemove_Story_1,Remove item ${index} from list ${var},从列表 ${var} 中删除项目 ${index} ,,GML Visual story text
GMStdListRemove_Story_2,Remove item ${index} from list ${var} on ${applyto},从 ${applyto} 上的列表 ${var} 中删除项目 ${index} ,,GML Visual story text
GMStdListGetAt_Story_1,Get item ${index} in list ${var} into ${assignee}${show_input_count},将列表 ${var} 中的项目 ${index} 获取到 ${assignee}${show_input_count} ,,GML Visual story text
GMStdListGetAt_Story_2,Get item ${index} in list ${var} into ${assignee} on ${applyto}${show_input_count},将列表 ${var} 中的项目 ${index} 获取到 ${applyto}${show_input_count} 上的 ${assignee} 中,,GML Visual story text
GMStdListGetAt_Story_3,Get item ${index} in list ${var} into temp ${assignee}${show_input_count},将列表 ${var} 中的项目 ${index} 获取到临时 ${assignee}${show_input_count} ,,GML Visual story text
GMStdListGetAt_Story_4,Get item ${index} in list ${var} into temp ${assignee} on ${applyto}${show_input_count},将列表 ${var} 中的项目 ${index} 获取到 ${applyto}${show_input_count} 上的临时 ${assignee} 中,,GML Visual story text
GMStdListIndexOf_Story_1,Get index of item ${value} in list ${var} into ${assignee}${show_input_count},将列表 ${var} 中项目 ${value} 的索引获取到 ${assignee}${show_input_count} ,,GML Visual story text
GMStdListIndexOf_Story_2,Get index of item ${value} in list ${var} into ${assignee} on ${applyto}${show_input_count},将列表 ${var} 中项目 ${value} 的索引获取到 ${applyto}${show_input_count} 上的 ${assignee} ,,GML Visual story text
GMStdListIndexOf_Story_3,Get index of item ${value} in list ${var} into temp ${assignee}${show_input_count},将列表 ${var} 中项目 ${value} 的索引获取到临时 ${assignee}${show_input_count} ,,GML Visual story text
GMStdListIndexOf_Story_4,Get index of item ${value} in list ${var} into temp ${assignee} on ${applyto}${show_input_count},将列表 ${var} 中项目 ${value} 的索引获取到 ${applyto}${show_input_count} 上的临时 ${assignee} 中,,GML Visual story text
GMStdListInsert_Story_1,Insert ${value} into list ${var} at index ${index},在索引 ${index} 处将 ${value} 插入列表 ${var} ,,GML Visual story text
GMStdListInsert_Story_2,Insert ${value} into list ${var} at index ${index} on ${applyto},将 ${value} 插入到 ${applyto} 上索引 ${index} 处的列表 ${var} 中,,GML Visual story text
GMStdListCount_Story_1,Get item count in list ${var} and assign it to ${assignee},获取列表 ${var} 中的项目计数并将其分配给 ${assignee} ,,GML Visual story text
GMStdListCount_Story_2,Get item count in list ${var} and assign it to ${assignee} on ${applyto},获取列表 ${var} 中的项目计数，并将其分配给 ${applyto} 上的 ${assignee} ,,GML Visual story text
GMStdListCount_Story_3,Get item count in list ${var} and assign it to temp ${assignee},获取列表 ${var} 中的项目计数并将其分配给临时 ${assignee} ,,GML Visual story text
GMStdListCount_Story_4,Get item count in list ${var} and assign it to temp ${assignee} on ${applyto},获取列表 ${var} 中的项目计数，并将其分配给 ${applyto} 上的临时 ${assignee} ,,GML Visual story text
GMStdMapSetValue_Story_1,Set key ${key} to ${value} in map ${var}${show_input_count},将地图 ${var}${show_input_count} 中的密钥 ${key} 设置为 ${value} ,,GML Visual story text
GMStdMapSetValue_Story_2,Set key ${key} to ${value} in map ${var} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上的映射 ${var} 中将密钥 ${key} 设置为 ${value} ,,GML Visual story text
GMStdMapGetValue_Story_1,Get value of key ${key} in map ${map} into ${assignee}${show_input_count},获取映射 ${map} 到 ${assignee}${show_input_count} 中的密钥 ${key} 的值,,GML Visual story text
GMStdMapGetValue_Story_2,Get value of key ${key} in map ${map} into ${assignee} on ${applyto}${show_input_count},获取 ${applyto}${show_input_count} 上映射 ${map} 到 ${assignee} 的密钥 ${key} 的值,,GML Visual story text
GMStdMapGetValue_Story_3,Get value of key ${key} in map ${map} into temp ${assignee}${show_input_count},获取映射 ${map} 到临时 ${assignee}${show_input_count} 中的密钥 ${key} 的值,,GML Visual story text
GMStdMapGetValue_Story_4,Get value of key ${key} in map ${map} into temp ${assignee} on ${applyto}${show_input_count},获取映射 ${map} 到 ${applyto}${show_input_count} 上的临时 ${assignee} 的密钥 ${key} 的值,,GML Visual story text
GMStdMapRemove_Story_1,Remove key ${key} from map ${map}${show_input_count},从映射 ${map} ${show_input_count} 中删除密钥 ${key} ,,GML Visual story text
GMStdMapRemove_Story_2,Remove key ${key} from map ${map} on ${applyto}${show_input_count},从 ${applyto}${show_input_count} 上的映射 ${map} 中删除密钥 ${key} ,,GML Visual story text
GMStdGridSetValue_Story_1,"Set ${value} in grid ${var} at ${x},${y}${show_input_count}","将网格${var}中的${value}设置为${x}，${y}${show_input_count}",,GML Visual story text
GMStdGridSetValue_Story_2,"Set ${value} in grid ${var} at ${x},${y} on ${applyto}${show_input_count}","将网格${var}中的${value}设置为${x}，将${y}设置为${applyto}${show_input_count}",,GML Visual story text
GMStdGridGetValue_Story_1,"Get value in grid ${var} at ${x},${y} into ${assignee}${show_input_count}","将网格${var}中${x}、${y}处的值获取到${assignee}${show_input_count}",,GML Visual story text
GMStdGridGetValue_Story_2,"Get value in grid ${var} at ${x},${y} into ${assignee} on ${applyto}${show_input_count}","将位于${x}、${y}的网格${var}中的值获取到${applyto}${show_input_count}上的${assignee}",,GML Visual story text
GMStdGridGetValue_Story_3,"Get value in grid ${var} at ${x},${y} into temp ${assignee}${show_input_count}","将网格${var}中${x}、${y}处的值获取到临时${assignee}${show_input_count}",,GML Visual story text
GMStdGridGetValue_Story_4,"Get value in grid ${var} at ${x},${y} into temp ${assignee} on ${applyto}${show_input_count}","将网格${var}中${x}、${y}处的值获取到${applyto}${show_input_count}上的临时${assignee}",,GML Visual story text
GMStdGridClear_Story_1,Clear grid ${var} to value ${value},将格网 ${var} 清除为值 ${value} ,,GML Visual story text
GMStdGridClear_Story_2,Clear grid ${var} to value ${value} on ${applyto},将格网 ${var} 清除为 ${applyto} 上的 ${value} 值,,GML Visual story text
GMStdStackPush_Story_1,Push ${value} onto stack ${var}${show_input_count},将 ${value} 推送到堆栈 ${var}${show_input_count} ,,GML Visual story text
GMStdStackPush_Story_2,Push ${value} onto stack ${var} on ${applyto}${show_input_count},将 ${value} 推送到 ${applyto}${show_input_count} 上的堆栈 ${var} 上,,GML Visual story text
GMStdStackPop_Story_1,Pop from stack ${var} into ${assignee}${show_input_count},从堆栈 ${var} 弹出到 ${assignee}${show_input_count} ,,GML Visual story text
GMStdStackPop_Story_2,Pop from stack ${var} into ${assignee} on ${applyto}${show_input_count},从堆栈 ${var} 中弹出到 ${applyto}${show_input_count} 上的 ${assignee} ,,GML Visual story text
GMStdStackPop_Story_3,Pop from stack ${var} into temp ${assignee}${show_input_count},从堆栈 ${var} 弹出到临时 ${assignee}${show_input_count} ,,GML Visual story text
GMStdStackPop_Story_4,Pop from stack ${var} into temp ${assignee} on ${applyto}${show_input_count},从堆栈 ${var} 中弹出到 ${applyto}${show_input_count} 上的临时 ${assignee} ,,GML Visual story text
GMStdIfDSExists_Story_1,If list ${var} does not exists,如果列表 ${var} 不存在,,GML Visual story text
GMStdIfDSExists_Story_2,If list ${var} does not exists on ${applyto},如果 ${applyto} 上不存在列表 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_3,If list ${var} exists,如果列表 ${var} 存在,,GML Visual story text
GMStdIfDSExists_Story_4,If list ${var} exists on ${applyto},如果 ${applyto} 上存在列表 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_5,If map ${var} does not exists,如果地图 ${var} 不存在,,GML Visual story text
GMStdIfDSExists_Story_6,If map ${var} does not exists on ${applyto},如果 ${applyto} 上不存在地图 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_7,If map ${var} exists,如果地图 ${var} 存在,,GML Visual story text
GMStdIfDSExists_Story_8,If map ${var} exists on ${applyto},如果 ${applyto} 上存在地图 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_9,If grid ${var} does not exists,如果格网 ${var} 不存在,,GML Visual story text
GMStdIfDSExists_Story_10,If grid ${var} does not exists on ${applyto},如果 ${applyto} 上不存在格网 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_11,If grid ${var} exists,如果格网 ${var} 存在,,GML Visual story text
GMStdIfDSExists_Story_12,If grid ${var} exists on ${applyto},如果 ${applyto} 上存在格网 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_13,If stack ${var} does not exists,如果堆栈 ${var} 不存在,,GML Visual story text
GMStdIfDSExists_Story_14,If stack ${var} does not exists on ${applyto},如果 ${applyto} 上不存在堆栈 ${var} ,,GML Visual story text
GMStdIfDSExists_Story_15,If stack ${var} exists,如果堆栈 ${var} 存在,,GML Visual story text
GMStdIfDSExists_Story_16,If stack ${var} exists on ${applyto},如果 ${applyto} 上存在堆栈 ${var} ,,GML Visual story text
GMStdIfDSEmpty_Story_1,If list ${var} is not empty,如果列表 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_2,If list ${var} is not empty on ${applyto},如果 ${applyto} 上的列表 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_3,If list ${var} is empty,如果列表 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_4,If list ${var} is empty on ${applyto},如果 ${applyto} 上的列表 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_5,If map ${var} is not empty,如果地图 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_6,If map ${var} is not empty on ${applyto},如果 ${applyto} 上的地图 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_7,If map ${var} is empty,如果地图 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_8,If map ${var} is empty on ${applyto},如果 ${applyto} 上的地图 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_9,If grid ${var} is not empty,如果格网 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_10,If grid ${var} is not empty on ${applyto},如果 ${applyto} 上的格网 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_11,If grid ${var} is empty,如果格网 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_12,If grid ${var} is empty on ${applyto},如果 ${applyto} 上的格网 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_13,If stack ${var} is not empty,如果堆栈 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_14,If stack ${var} is not empty on ${applyto},如果 ${applyto} 上的堆栈 ${var} 不为空,,GML Visual story text
GMStdIfDSEmpty_Story_15,If stack ${var} is empty,如果堆栈 ${var} 为空,,GML Visual story text
GMStdIfDSEmpty_Story_16,If stack ${var} is empty on ${applyto},如果 ${applyto} 上的堆栈 ${var} 为空,,GML Visual story text
GMStdBufferCreate_Story_1,Create buffer into ${target}${show_input_count},在 ${target}${show_input_count} 中创建缓冲区,,GML Visual story text
GMStdBufferCreate_Story_2,Create buffer into ${target} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上的 ${target} 中创建缓冲区,,GML Visual story text
GMStdBufferCreate_Story_3,Create buffer into temp ${target}${show_input_count},在临时 ${target}${show_input_count} 中创建缓冲区,,GML Visual story text
GMStdBufferCreate_Story_4,Create buffer into temp ${target} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上的临时 ${target} 中创建缓冲区,,GML Visual story text
GMStdBufferCopy_Story_1,Copy buffer ${buffer} into ${target},将缓冲区 ${buffer} 复制到 ${target} ,,GML Visual story text
GMStdBufferCopy_Story_2,Copy buffer ${buffer} into ${target} on ${applyto},将缓冲区 ${buffer} 复制到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdBufferDelete_Story_1,Delete buffer ${buffer}${show_input_count},删除缓冲区 ${buffer} ${show_input_count} ,,GML Visual story text
GMStdBufferDelete_Story_2,Delete buffer ${buffer} on ${applyto}${show_input_count},删除 ${applyto}${show_input_count} 上的缓冲区 ${buffer} ,,GML Visual story text
GMStdBufferRead_Story_1,Read from buffer ${buffer},从缓冲区 ${buffer} 读取,,GML Visual story text
GMStdBufferRead_Story_2,Read from buffer ${buffer} on ${applyto},从 ${applyto} 上的缓冲区 ${buffer} 读取,,GML Visual story text
GMStdBufferRead_Story_3,Read from buffer ${buffer} into ${target},从缓冲区 ${buffer} 读取到 ${target} ,,GML Visual story text
GMStdBufferRead_Story_4,Read from buffer ${buffer} into ${target} on ${applyto},从缓冲区 ${buffer} 读取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdBufferRead_Story_5,Read from buffer ${buffer} into temp ${target},从缓冲区 ${buffer} 读取到临时 ${target} ,,GML Visual story text
GMStdBufferRead_Story_6,Read from buffer ${buffer} into temp ${target} on ${applyto},从缓冲区 ${buffer} 读取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdBufferWrite_Story_1,Write ${value} to buffer ${buffer},将 ${value} 写入缓冲区 ${buffer} ,,GML Visual story text
GMStdBufferWrite_Story_2,Write ${value} to buffer ${buffer} on ${applyto},将 ${value} 写入 ${applyto} 上的缓冲区 ${buffer} ,,GML Visual story text
GMStdBufferSeek_Story_1,Seek to position ${pos} from start in buffer ${buffer},查找缓冲区 ${buffer} 中从起始位置开始的 ${pos} ,,GML Visual story text
GMStdBufferSeek_Story_2,Seek to position ${pos} from start in buffer ${buffer} on ${applyto},寻求从 ${applyto} 上的缓冲区 ${buffer} 中开始定位 ${pos} ,,GML Visual story text
GMStdBufferSeek_Story_3,Seek to position ${pos} relative to position in buffer ${buffer},查找相对于缓冲区 ${buffer} 中的位置定位 ${pos} ,,GML Visual story text
GMStdBufferSeek_Story_4,Seek to position ${pos} relative to position in buffer ${buffer} on ${applyto},寻求相对于 ${applyto} 上缓冲区 ${buffer} 中的位置定位 ${pos} ,,GML Visual story text
GMStdBufferSeek_Story_5,Seek to position ${pos} from end in buffer ${buffer},查找从缓冲区 ${buffer} 中的末尾开始定位 ${pos} ,,GML Visual story text
GMStdBufferSeek_Story_6,Seek to position ${pos} from end in buffer ${buffer} on ${applyto},查找从 ${applyto} 上缓冲区 ${buffer} 的末端开始定位 ${pos} ,,GML Visual story text
GMStdBufferGetSize_Story_1,Get size of buffer ${buffer} into ${target},将缓冲区 ${buffer} 的大小获取到 ${target} ,,GML Visual story text
GMStdBufferGetSize_Story_2,Get size of buffer ${buffer} into ${target} on ${applyto},将缓冲区 ${buffer} 的大小获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdBufferGetSize_Story_3,Get size of buffer ${buffer} into temp ${target},将缓冲区 ${buffer} 的大小获取到临时 ${target} ,,GML Visual story text
GMStdBufferGetSize_Story_4,Get size of buffer ${buffer} into temp ${target} on ${applyto},将缓冲区 ${buffer} 的大小获取到 ${applyto} 上的临时 ${target} 中,,GML Visual story text
GMStdBufferGetPosition_Story_1,Get position in buffer ${buffer} into ${target},将缓冲区 ${buffer} 中的位置获取到 ${target} ,,GML Visual story text
GMStdBufferGetPosition_Story_2,Get position in buffer ${buffer} into ${target} on ${applyto},将缓冲区 ${buffer} 中的位置获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdBufferGetPosition_Story_3,Get position in buffer ${buffer} into temp ${target},将缓冲区 ${buffer} 中的位置获取到临时 ${target} ,,GML Visual story text
GMStdBufferGetPosition_Story_4,Get position in buffer ${buffer} into temp ${target} on ${applyto},将缓冲区 ${buffer} 中的位置获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdBufferExists_Story_1,If buffer ${buffer} does not exist,如果缓冲区 ${buffer} 不存在,,GML Visual story text
GMStdBufferExists_Story_2,If buffer ${buffer} does not exist on ${applyto},如果 ${applyto} 上不存在缓冲区 ${buffer} ,,GML Visual story text
GMStdBufferExists_Story_3,If buffer ${buffer} exists,如果缓冲区 ${buffer} 存在,,GML Visual story text
GMStdBufferExists_Story_4,If buffer ${buffer} exists on ${applyto},如果 ${applyto} 上存在缓冲区 ${buffer} ,,GML Visual story text
GMStdBufferEOS_Story_1,If end of buffer ${buffer} not reached,如果未到达缓冲区 ${buffer} 的末尾,,GML Visual story text
GMStdBufferEOS_Story_2,If end of buffer ${buffer} not reached on ${applyto},如果在 ${applyto} 上未到达缓冲区 ${buffer} 的末尾,,GML Visual story text
GMStdBufferEOS_Story_3,If end of buffer ${buffer} reached,如果达到缓冲区 ${buffer} 的末尾,,GML Visual story text
GMStdBufferEOS_Story_4,If end of buffer ${buffer} reached on ${applyto},如果在 ${applyto} 上到达缓冲区 ${buffer} 的末尾,,GML Visual story text
GMStdBufferLoad_Story_1,Load file ${filename} into buffer ${target},将文件 ${filename} 加载到缓冲区 ${target} ,,GML Visual story text
GMStdBufferLoad_Story_2,Load file ${filename} into buffer ${target} on ${applyto},将文件 ${filename} 加载到 ${applyto} 上的缓冲区 ${target} ,,GML Visual story text
GMStdBufferLoad_Story_3,Load file ${filename} into buffer temp ${target},将文件 ${filename} 加载到缓冲区临时 ${target} ,,GML Visual story text
GMStdBufferLoad_Story_4,Load file ${filename} into buffer temp ${target} on ${applyto},将文件 ${filename} 加载到 ${applyto} 上的缓冲区临时 ${target} ,,GML Visual story text
GMStdBufferSave_Story_1,Save buffer ${buffer} to file ${filename},将缓冲区 ${buffer} 保存到文件 ${filename} ,,GML Visual story text
GMStdBufferSave_Story_2,Save buffer ${buffer} to file ${filename} on ${applyto},将缓冲区 ${buffer} 保存到 ${applyto} 上的文件 ${filename} ,,GML Visual story text
GMStdFileRename_Story_1,Rename file ${file1} to ${file2},将文件${file1}重命名为${file2},,GML Visual story text
GMStdFileRename_Story_2,Rename file ${file1} to ${file2} on ${applyto},将 ${applyto} 上的文件${file1}重命名为${file2},,GML Visual story text
GMStdFileCopy_Story_1,Copy file ${file1} to ${file2},将文件${file1}复制到${file2},,GML Visual story text
GMStdFileCopy_Story_2,Copy file ${file1} to ${file2} on ${applyto},将文件${file1}复制到 ${applyto} 上的${file2},,GML Visual story text
GMStdFileDelete_Story_1,Delete file ${file},删除文件 ${file} ,,GML Visual story text
GMStdFileDelete_Story_2,Delete file ${file} on ${applyto},删除 ${applyto} 上的文件 ${file} ,,GML Visual story text
GMStdOpenIni_Story_1,Open ini file ${filename},打开ini文件 ${filename} ,,GML Visual story text
GMStdOpenIni_Story_2,Open ini file ${filename} on ${applyto},在 ${applyto} 上打开ini文件 ${filename} ,,GML Visual story text
GMStdCloseIni_Story_1,Close ini file,关闭ini文件,,GML Visual story text
GMStdCloseIni_Story_2,Close ini file on ${applyto},关闭 ${applyto} 上的ini文件,,GML Visual story text
GMStdIniWrite_Story_1,Write ${value} under key ${key} in section ${section} to ini file,将 ${section} 节中密钥 ${key} 下的 ${value} 写入ini文件,,GML Visual story text
GMStdIniWrite_Story_2,Write ${value} under key ${key} in section ${section} to ini file on ${applyto},将 ${section} 节中密钥 ${key} 下的 ${value} 写入 ${applyto} 上的ini文件,,GML Visual story text
GMStdIniRead_Story_1,Read key ${key} in section ${section} and assign it to ${var},读取节 ${section} 中的密钥 ${key} 并将其分配给 ${var} ,,GML Visual story text
GMStdIniRead_Story_2,Read key ${key} in section ${section} and assign it to ${var} on ${applyto},读取 ${section} 部分中的密钥 ${key} ，并将其分配给 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdIniRead_Story_3,Read key ${key} in section ${section} and assign it to temp ${var},读取部分 ${section} 中的密钥 ${key} ，并将其分配给临时 ${var} ,,GML Visual story text
GMStdIniRead_Story_4,Read key ${key} in section ${section} and assign it to temp ${var} on ${applyto},读取 ${section} 部分中的密钥 ${key} ，并将其分配给 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdIfFileExists_Story_1,If file ${file} does not exist,如果文件 ${file} 不存在,,GML Visual story text
GMStdIfFileExists_Story_2,If file ${file} does not exist on ${applyto},如果 ${applyto} 上不存在文件 ${file} ,,GML Visual story text
GMStdIfFileExists_Story_3,If file ${file} exists,如果文件 ${file} 存在,,GML Visual story text
GMStdIfFileExists_Story_4,If file ${file} exists on ${applyto},如果 ${applyto} 上存在文件 ${file} ,,GML Visual story text
GMStdDecimalToInteger_Story_1,Round ${n} and assign it to ${var},舍入 ${n} 并将其分配给 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_2,Round ${n} and assign it to ${var} on ${applyto},对 ${n} 进行取整并将其分配给 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_3,Round ${n} and assign it to temp ${var},舍入 ${n} 并将其分配给临时 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_4,Round ${n} and assign it to temp ${var} on ${applyto},对 ${n} 进行取整并将其分配给 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_5,Ceil ${n} and assign it to ${var},ceil ${n} 并将其分配给 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_6,Ceil ${n} and assign it to ${var} on ${applyto},Ceil ${n} 并将其分配给 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_7,Ceil ${n} and assign it to temp ${var},存储 ${n} 并将其分配给临时 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_8,Ceil ${n} and assign it to temp ${var} on ${applyto},存储 ${n} 并将其分配给 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_9,Floor ${n} and assign it to ${var},楼层 ${n} 并将其分配给 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_10,Floor ${n} and assign it to ${var} on ${applyto},楼层 ${n} 并将其分配给 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_11,Floor ${n} and assign it to temp ${var},楼层 ${n} 并将其分配给临时 ${var} ,,GML Visual story text
GMStdDecimalToInteger_Story_12,Floor ${n} and assign it to temp ${var} on ${applyto},楼层 ${n} 并将其分配给 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdStringToNumber_Story_1,Convert ${value} to a string and assign it to ${var},将 ${value} 转换为字符串并将其分配给 ${var} ,,GML Visual story text
GMStdStringToNumber_Story_2,Convert ${value} to a string and assign it to ${var} on ${applyto},将 ${value} 转换为字符串，并将其分配给 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdStringToNumber_Story_3,Convert ${value} to a string and assign it to temp ${var},将 ${value} 转换为字符串并将其分配给临时 ${var} ,,GML Visual story text
GMStdStringToNumber_Story_4,Convert ${value} to a string and assign it to temp ${var} on ${applyto},将 ${value} 转换为字符串，并将其分配给 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdNumberToString_Story_1,Convert ${value} to a number and assign it to ${var},将 ${value} 转换为数字并将其分配给 ${var} ,,GML Visual story text
GMStdNumberToString_Story_2,Convert ${value} to a number and assign it to ${var} on ${applyto},将 ${value} 转换为数字并将其分配给 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdNumberToString_Story_3,Convert ${value} to a number and assign it to temp ${var},将 ${value} 转换为数字并将其分配给临时 ${var} ,,GML Visual story text
GMStdNumberToString_Story_4,Convert ${value} to a number and assign it to temp ${var} on ${applyto},将 ${value} 转换为数字并将其分配给 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdGetRandomNumber_Story_1,Get a random number between ${min} and ${max} into ${var},获取 ${var} 中 ${min} 和 ${max} 之间的随机数,,GML Visual story text
GMStdGetRandomNumber_Story_2,Get a random number between ${min} and ${max} into ${var} on ${applyto},在 ${applyto} 上获取 ${var} 中 ${min} 到 ${max} 之间的随机数,,GML Visual story text
GMStdGetRandomNumber_Story_3,Get a random number between ${min} and ${max} into temp ${var},将 ${min} 到 ${max} 之间的随机数放入临时 ${var} ,,GML Visual story text
GMStdGetRandomNumber_Story_4,Get a random number between ${min} and ${max} into temp ${var} on ${applyto},获取 ${applyto} 上的临时 ${var} 中 ${min} 到 ${max} 之间的随机数,,GML Visual story text
GMStdRandomize_Story,Randomize seed,随机化种子,,GML Visual story text
GMStdChoose_Story_1,Get a random element from a list into ${var}${show_input_count},将列表中的随机元素获取到 ${var}${show_input_count} ,,GML Visual story text
GMStdChoose_Story_2,Get a random element from a list into ${var} on ${applyto}${show_input_count},将列表中的随机元素获取到 ${applyto}${show_input_count} 上的 ${var} ,,GML Visual story text
GMStdChoose_Story_3,Get a random element from a list into temp ${var}${show_input_count},将列表中的随机元素获取到临时 ${var}${show_input_count} 中,,GML Visual story text
GMStdChoose_Story_4,Get a random element from a list into temp ${var} on ${applyto}${show_input_count},将列表中的随机元素获取到 ${applyto}${show_input_count} 上的临时 ${var} 中,,GML Visual story text
GMStdSetViewVar_Story_1,Set view camera of view ${view} to ${value},将视图 ${view} 的视图摄像机设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_2,Set view camera of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视图摄像机设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_3,Set view visibility of view ${view} to ${value},将视图 ${view} 的视图可见性设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_4,Set view visibility of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视图可见性设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_5,Set view port X of view ${view} to ${value},将视图 ${view} 的视口X设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_6,Set view port X of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视图端口X设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_7,Set view port Y of view ${view} to ${value},将视图 ${view} 的视口Y设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_8,Set view port Y of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视图端口Y设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_9,Set view port width of view ${view} to ${value},将视图 ${view} 的视口宽度设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_10,Set view port width of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视口宽度设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_11,Set view port height of view ${view} to ${value},将视图 ${view} 的视口高度设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_12,Set view port height of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视口高度设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_13,Set view surface id of view ${view} to ${value},将视图 ${view} 的视图表面ID设置为 ${value} ,,GML Visual story text
GMStdSetViewVar_Story_14,Set view surface id of view ${view} to ${value} on ${applyto},在 ${applyto} 上将视图 ${view} 的视图图面ID设置为 ${value} ,,GML Visual story text
GMStdGetViewVar_Story_1,Get view camera of view ${view} into ${target},将视图 ${view} 的视图摄像机放入 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_2,Get view camera of view ${view} into ${target} on ${applyto},将视图 ${view} 的视图摄像机获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_3,Get view camera of view ${view} into temp ${target},将视图 ${view} 的视图摄像机获取到温度 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_4,Get view camera of view ${view} into temp ${target} on ${applyto},将视图 ${view} 的视图摄像机获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_5,Get view visibility of view ${view} into ${target},获取视图 ${view} 到 ${target} 的视图可见性,,GML Visual story text
GMStdGetViewVar_Story_6,Get view visibility of view ${view} into ${target} on ${applyto},获取视图 ${view} 在 ${applyto} 上进入 ${target} 的视图可见性,,GML Visual story text
GMStdGetViewVar_Story_7,Get view visibility of view ${view} into temp ${target},获取视图 ${view} 到临时 ${target} 的视图可见性,,GML Visual story text
GMStdGetViewVar_Story_8,Get view visibility of view ${view} into temp ${target} on ${applyto},获取 ${applyto} 上临时 ${target} 视图 ${view} 的视图可见性,,GML Visual story text
GMStdGetViewVar_Story_9,Get view port X of view ${view} into ${target},将视图 ${view} 的视口X获取到 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_10,Get view port X of view ${view} into ${target} on ${applyto},将视图 ${view} 的视图端口X获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_11,Get view port X of view ${view} into temp ${target},将视图 ${view} 的视口X获取到临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_12,Get view port X of view ${view} into temp ${target} on ${applyto},将视图 ${view} 的视图端口X获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_13,Get view port Y of view ${view} into ${target},将视图 ${view} 的视口Y获取到 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_14,Get view port Y of view ${view} into ${target} on ${applyto},将视图 ${view} 的视图端口Y获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_15,Get view port Y of view ${view} into temp ${target},将视图 ${view} 的视口Y获取到临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_16,Get view port Y of view ${view} into temp ${target} on ${applyto},将视图 ${view} 的视图端口Y获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_17,Get view port width of view ${view} into ${target},将视图 ${view} 的视口宽度获取到 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_18,Get view port width of view ${view} into ${target} on ${applyto},将视图 ${view} 的视图端口宽度获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_19,Get view port width of view ${view} into temp ${target},将视图 ${view} 的视口宽度获取到临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_20,Get view port width of view ${view} into temp ${target} on ${applyto},将视图 ${view} 的视图端口宽度获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_21,Get view port height of view ${view} into ${target},将视图 ${view} 的视口高度获取到 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_22,Get view port height of view ${view} into ${target} on ${applyto},将视图 ${view} 的视口高度获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_23,Get view port height of view ${view} into temp ${target},将视图 ${view} 的视口高度获取到温度 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_24,Get view port height of view ${view} into temp ${target} on ${applyto},将视图 ${view} 的视口高度获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_25,Get view surface id of view ${view} into ${target},将视图 ${view} 的视图表面ID获取到 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_26,Get view surface id of view ${view} into ${target} on ${applyto},将视图 ${view} 的视图图面ID获取到 ${applyto} 上的 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_27,Get view surface id of view ${view} into temp ${target},将视图 ${view} 的视图图面ID获取到临时 ${target} ,,GML Visual story text
GMStdGetViewVar_Story_28,Get view surface id of view ${view} into temp ${target} on ${applyto},将视图 ${view} 的视图图面ID获取到 ${applyto} 上的临时 ${target} ,,GML Visual story text
GMStdGoToRoom_Story_1,Go to room ${room},转到 ${room} 房间,,GML Visual story text
GMStdGoToRoom_Story_2,Go to room ${room} on ${applyto},转到 ${applyto} 上的 ${room} 房间,,GML Visual story text
GMStdNextRoom_Story,Go to next room,前往下一个房间,,GML Visual story text
GMStdPreviousRoom_Story,Go to previous room,前往上一个房间,,GML Visual story text
GMStdRestartRoom_Story,Restart current room,重新启动当前房间,,GML Visual story text
GMStdIfFirstRoom_Story_1,If this is not the first room,如果这不是第一个房间,,GML Visual story text
GMStdIfFirstRoom_Story_2,If this is the first room,如果这是第一个房间,,GML Visual story text
GMStdIfLastRoom_Story_1,If this is not the last room,如果这不是最后一个房间,,GML Visual story text
GMStdIfLastRoom_Story_2,If this is the last room,如果这是最后一个房间,,GML Visual story text
GMStdGetCurrentRoom_Story_1,Get current room into ${var},将当前房间放入 ${var} ,,GML Visual story text
GMStdGetCurrentRoom_Story_2,Get current room into ${var} on ${applyto},将当前房间放入 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdGetCurrentRoom_Story_3,Get current room into temp ${var},将当前房间设置为临时 ${var} ,,GML Visual story text
GMStdGetCurrentRoom_Story_4,Get current room into temp ${var} on ${applyto},将当前房间放入 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdStartPath_Story_1,Start path ${path} with speed ${speed} and ${atend} on end,开始路径 ${path} ，结束速度为 ${speed} 和 ${atend} ,,GML Visual story text
GMStdStartPath_Story_2,Start path ${path} with speed ${speed} and ${atend} on end on ${applyto},在 ${applyto} 上开始路径 ${path} ，结束速度为 ${speed} 和 ${atend} ,,GML Visual story text
GMStdStopPath_Story_1,Stop following a path,停止跟随路径,,GML Visual story text
GMStdStopPath_Story_2,Stop following a path on ${applyto},停止跟踪 ${applyto} 上的路径,,GML Visual story text
GMStdPathPosition_Story_1,Add ${position} to path position,将 ${position} 添加到路径位置,,GML Visual story text
GMStdPathPosition_Story_2,Add ${position} to path position on ${applyto},将 ${position} 添加到 ${applyto} 上的路径位置,,GML Visual story text
GMStdPathPosition_Story_3,Set path position to ${position},将路径位置设置为 ${position} ,,GML Visual story text
GMStdPathPosition_Story_4,Set path position to ${position} on ${applyto},在 ${applyto} 上将路径位置设置为 ${position} ,,GML Visual story text
GMStdPathGetPosition_Story_1,Get path position into ${target},获取进入 ${target} 的路径位置,,GML Visual story text
GMStdPathGetPosition_Story_2,Get path position into ${target} on ${applyto},在 ${applyto} 上获取进入 ${target} 的路径位置,,GML Visual story text
GMStdPathGetPosition_Story_3,Get path position into temp ${target},获取进入临时 ${target} 的路径位置,,GML Visual story text
GMStdPathGetPosition_Story_4,Get path position into temp ${target} on ${applyto},在 ${applyto} 上获取进入临时 ${target} 的路径位置,,GML Visual story text
GMStdPathSpeed_Story_1,Add ${speed} to path speed,将 ${speed} 添加到路径速度,,GML Visual story text
GMStdPathSpeed_Story_2,Add ${speed} to path speed on ${applyto},将 ${speed} 添加到 ${applyto} 上的路径速度,,GML Visual story text
GMStdPathSpeed_Story_3,Set path speed to ${speed},将路径速度设置为 ${speed} ,,GML Visual story text
GMStdPathSpeed_Story_4,Set path speed to ${speed} on ${applyto},在 ${applyto} 上将路径速度设置为 ${speed} ,,GML Visual story text
GMStdPathGetSpeed_Story_1,Get path speed into ${target},获取进入 ${target} 的路径速度,,GML Visual story text
GMStdPathGetSpeed_Story_2,Get path speed into ${target} on ${applyto},在 ${applyto} 上获取进入 ${target} 的路径速度,,GML Visual story text
GMStdPathGetSpeed_Story_3,Get path speed into temp ${target},获取进入临时 ${target} 的路径速度,,GML Visual story text
GMStdPathGetSpeed_Story_4,Get path speed into temp ${target} on ${applyto},获取进入 ${applyto} 上的临时 ${target} 的路径速度,,GML Visual story text
GMStdSetTimeline_Story_1,Start timeline ${timeline} and loop it,启动时间线 ${timeline} 并循环,,GML Visual story text
GMStdSetTimeline_Story_2,Start timeline ${timeline} and loop it on ${applyto},启动时间线 ${timeline} 并在 ${applyto} 上循环,,GML Visual story text
GMStdSetTimeline_Story_3,Start timeline ${timeline},开始时间线 ${timeline} ,,GML Visual story text
GMStdSetTimeline_Story_4,Start timeline ${timeline} on ${applyto},在 ${applyto} 上开始时间线 ${timeline} ,,GML Visual story text
GMStdSetTimeline_Story_5,Set timeline ${timeline} and loop it,设置时间线 ${timeline} 并循环,,GML Visual story text
GMStdSetTimeline_Story_6,Set timeline ${timeline} and loop it on ${applyto},设置时间线 ${timeline} 并在 ${applyto} 上循环,,GML Visual story text
GMStdSetTimeline_Story_7,Set timeline ${timeline},设置时间线 ${timeline} ,,GML Visual story text
GMStdSetTimeline_Story_8,Set timeline ${timeline} on ${applyto},在 ${applyto} 上设置时间线 ${timeline} ,,GML Visual story text
GMStdPositionTimeline_Story_1,Add ${position} to timeline position,将 ${position} 添加到时间线位置,,GML Visual story text
GMStdPositionTimeline_Story_2,Add ${position} to timeline position on ${applyto},将 ${position} 添加到 ${applyto} 上的时间线位置,,GML Visual story text
GMStdPositionTimeline_Story_3,Set timeline position to ${position},将时间线位置设置为 ${position} ,,GML Visual story text
GMStdPositionTimeline_Story_4,Set timeline position to ${position} on ${applyto},在 ${applyto} 上将时间线位置设置为 ${position} ,,GML Visual story text
GMStdSpeedTimeline_Story_1,Add ${speed} to timeline speed,将 ${speed} 添加到时间线速度,,GML Visual story text
GMStdSpeedTimeline_Story_2,Add ${speed} to timeline speed on ${applyto},将 ${speed} 添加到 ${applyto} 上的时间线速度,,GML Visual story text
GMStdSpeedTimeline_Story_3,Set timeline speed to ${speed},将时间线速度设置为 ${speed} ,,GML Visual story text
GMStdSpeedTimeline_Story_4,Set timeline speed to ${speed} on ${applyto},在 ${applyto} 上将时间线速度设置为 ${speed} ,,GML Visual story text
GMStdSetTimelineState_Story_1,Start timeline,开始时间线,,GML Visual story text
GMStdSetTimelineState_Story_2,Start timeline on ${applyto},在 ${applyto} 上开始时间线,,GML Visual story text
GMStdSetTimelineState_Story_3,Resume timeline,恢复时间线,,GML Visual story text
GMStdSetTimelineState_Story_4,Resume timeline on ${applyto},恢复 ${applyto} 的时间线,,GML Visual story text
GMStdSetTimelineState_Story_5,Pause timeline,暂停时间线,,GML Visual story text
GMStdSetTimelineState_Story_6,Pause timeline on ${applyto},在 ${applyto} 上暂停时间线,,GML Visual story text
GMStdSetTimelineState_Story_7,Stop timeline,停止时间线,,GML Visual story text
GMStdSetTimelineState_Story_8,Stop timeline on ${applyto}, ${applyto} 上的停止时间线,,GML Visual story text
GMStdRestartGame_Story,Restart game,重启游戏,,GML Visual story text
GMStdEndGame_Story,Exit game,退出游戏,,GML Visual story text
GMStdSaveGame_Story_1,Save game to file ${filename},将游戏保存到文件 ${filename} ,,GML Visual story text
GMStdSaveGame_Story_2,Save game to file ${filename} on ${applyto},将游戏保存到 ${applyto} 上的文件 ${filename} ,,GML Visual story text
GMStdLoadGame_Story_1,Load game from file ${filename},从文件 ${filename} 加载游戏,,GML Visual story text
GMStdLoadGame_Story_2,Load game from file ${filename} on ${applyto},从 ${applyto} 上的文件 ${filename} 加载游戏,,GML Visual story text
GMStdSetScore_Story_1,Add ${score} to score,将 ${score} 添加到分数,,GML Visual story text
GMStdSetScore_Story_2,Add ${score} to score on ${applyto},将 ${score} 添加到 ${applyto} 上进行评分,,GML Visual story text
GMStdSetScore_Story_3,Set score to ${score},将分数设置为 ${score} ,,GML Visual story text
GMStdSetScore_Story_4,Set score to ${score} on ${applyto},将 ${applyto} 上的分数设置为 ${core} ,,GML Visual story text
GMStdGetScore_Story_1,Get score into ${var},获得 ${var} 的分数,,GML Visual story text
GMStdGetScore_Story_2,Get score into ${var} on ${applyto},在 ${applyto} 上获得 ${var} 分数,,GML Visual story text
GMStdGetScore_Story_3,Get score into temp ${var},获取临时 ${var} 的分数,,GML Visual story text
GMStdGetScore_Story_4,Get score into temp ${var} on ${applyto},在 ${applyto} 上获取临时 ${var} 的分数,,GML Visual story text
GMStdSetLives_Story_1,Add ${lives} to lives,将 ${lives} 添加到Lives,,GML Visual story text
GMStdSetLives_Story_2,Add ${lives} to lives on ${applyto},将 ${lives} 添加到 ${applyto} 上的Lives,,GML Visual story text
GMStdSetLives_Story_3,Set lives to ${lives},将Lives设置为 ${lives} ,,GML Visual story text
GMStdSetLives_Story_4,Set lives to ${lives} on ${applyto},在 ${applyto} 上将Lives设置为 ${lives} ,,GML Visual story text
GMStdGetLives_Story_1,Get lives into ${var},让生活进入 ${var} ,,GML Visual story text
GMStdGetLives_Story_2,Get lives into ${var} on ${applyto},让生命在 ${applyto} 上进入 ${var} ,,GML Visual story text
GMStdGetLives_Story_3,Get lives into temp ${var},让生命进入临时 ${var} ,,GML Visual story text
GMStdGetLives_Story_4,Get lives into temp ${var} on ${applyto},将生命置于 ${applyto} 上的临时 ${var} 中,,GML Visual story text
GMStdSetHealth_Story_1,Add ${health} to health,将 ${health} 添加到健康中,,GML Visual story text
GMStdSetHealth_Story_2,Add ${health} to health on ${applyto},将 ${health} 添加到 ${applyto} 上的运行状况,,GML Visual story text
GMStdSetHealth_Story_3,Set health to ${health},将健康设置为 ${health} ,,GML Visual story text
GMStdSetHealth_Story_4,Set health to ${health} on ${applyto},在 ${applyto} 上将运行状况设置为 ${health} ,,GML Visual story text
GMStdGetHealth_Story_1,Get health into ${var},让健康进入 ${var} ,,GML Visual story text
GMStdGetHealth_Story_2,Get health into ${var} on ${applyto},在 ${applyto} 上获取 ${var} 的健康,,GML Visual story text
GMStdGetHealth_Story_3,Get health into temp ${var},让临时值 ${var} 保持健康,,GML Visual story text
GMStdGetHealth_Story_4,Get health into temp ${var} on ${applyto},使 ${applyto} 上的临时 ${var} 保持健康,,GML Visual story text
GMStdIfScore_Story_1,If instance score is not equal to ${value},如果实例分数不等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_2,If instance score is not equal to ${value} on ${applyto},如果 ${applyto} 上的实例分数不等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_3,If instance score is not less than ${value},如果实例得分不小于 ${value} ,,GML Visual story text
GMStdIfScore_Story_4,If instance score is not less than ${value} on ${applyto},如果 ${applyto} 上的实例分数不小于 ${value} ,,GML Visual story text
GMStdIfScore_Story_5,If instance score is not greater than ${value},如果实例分数不大于 ${value} ,,GML Visual story text
GMStdIfScore_Story_6,If instance score is not greater than ${value} on ${applyto},如果 ${applyto} 上的实例分数不大于 ${value} ,,GML Visual story text
GMStdIfScore_Story_7,If instance score is not less than or equal to ${value},如果实例分数不小于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_8,If instance score is not less than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例分数不小于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_9,If instance score is not greater than or equal to ${value},如果实例分数不大于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_10,If instance score is not greater than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例分数不大于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_11,If instance score is equal to ${value},如果实例分数等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_12,If instance score is equal to ${value} on ${applyto},如果 ${applyto} 上的实例分数等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_13,If instance score is less than ${value},如果实例分数小于 ${value} ,,GML Visual story text
GMStdIfScore_Story_14,If instance score is less than ${value} on ${applyto},如果 ${applyto} 上的实例分数小于 ${value} ,,GML Visual story text
GMStdIfScore_Story_15,If instance score is greater than ${value},如果实例分数大于 ${value} ,,GML Visual story text
GMStdIfScore_Story_16,If instance score is greater than ${value} on ${applyto},如果 ${applyto} 上的实例分数大于 ${value} ,,GML Visual story text
GMStdIfScore_Story_17,If instance score is less than or equal to ${value},如果实例分数小于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_18,If instance score is less than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例分数小于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_19,If instance score is greater than or equal to ${value},如果实例分数大于或等于 ${value} ,,GML Visual story text
GMStdIfScore_Story_20,If instance score is greater than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例分数大于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_1,If instance lives is not equal to ${value},如果实例生存期不等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_2,If instance lives is not equal to ${value} on ${applyto},如果实例生存期不等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdIfLives_Story_3,If instance lives is not less than ${value},如果实例生存期不小于 ${value} ,,GML Visual story text
GMStdIfLives_Story_4,If instance lives is not less than ${value} on ${applyto},如果 ${applyto} 上的实例生存期不小于 ${value} ,,GML Visual story text
GMStdIfLives_Story_5,If instance lives is not greater than ${value},如果实例生存期不大于 ${value} ,,GML Visual story text
GMStdIfLives_Story_6,If instance lives is not greater than ${value} on ${applyto},如果 ${applyto} 上的实例生存期不大于 ${value} ,,GML Visual story text
GMStdIfLives_Story_7,If instance lives is not less than or equal to ${value},如果实例生存期不小于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_8,If instance lives is not less than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例生存期不小于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_9,If instance lives is not greater than or equal to ${value},如果实例生存期不大于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_10,If instance lives is not greater than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例生存期不大于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_11,If instance lives is equal to ${value},如果实例生存期等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_12,If instance lives is equal to ${value} on ${applyto},如果实例生存期等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdIfLives_Story_13,If instance lives is less than ${value},如果实例生存期小于 ${value} ,,GML Visual story text
GMStdIfLives_Story_14,If instance lives is less than ${value} on ${applyto},如果 ${applyto} 上的实例生存期小于 ${value} ,,GML Visual story text
GMStdIfLives_Story_15,If instance lives is greater than ${value},如果实例生存期大于 ${value} ,,GML Visual story text
GMStdIfLives_Story_16,If instance lives is greater than ${value} on ${applyto},如果 ${applyto} 上的实例生存期大于 ${value} ,,GML Visual story text
GMStdIfLives_Story_17,If instance lives is less than or equal to ${value},如果实例生存期小于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_18,If instance lives is less than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例生存期小于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_19,If instance lives is greater than or equal to ${value},如果实例生存期大于或等于 ${value} ,,GML Visual story text
GMStdIfLives_Story_20,If instance lives is greater than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例生存期大于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_1,If instance health is not equal to ${value},如果实例健康不等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_2,If instance health is not equal to ${value} on ${applyto},如果实例运行状况不等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdIfHealth_Story_3,If instance health is not less than ${value},如果实例健康不低于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_4,If instance health is not less than ${value} on ${applyto},如果 ${applyto} 上的实例运行状况不低于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_5,If instance health is not greater than ${value},如果实例运行状况不大于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_6,If instance health is not greater than ${value} on ${applyto},如果 ${applyto} 上的实例运行状况不大于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_7,If instance health is not less than or equal to ${value},如果实例健康不小于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_8,If instance health is not less than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例运行状况不小于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_9,If instance health is not greater than or equal to ${value},如果实例健康不大于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_10,If instance health is not greater than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例运行状况不大于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_11,If instance health is equal to ${value},如果实例健康等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_12,If instance health is equal to ${value} on ${applyto},如果实例运行状况等于 ${applyto} 上的 ${value} ,,GML Visual story text
GMStdIfHealth_Story_13,If instance health is less than ${value},如果实例运行状况小于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_14,If instance health is less than ${value} on ${applyto},如果 ${applyto} 上的实例运行状况低于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_15,If instance health is greater than ${value},如果实例运行状况大于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_16,If instance health is greater than ${value} on ${applyto},如果 ${applyto} 上的实例运行状况大于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_17,If instance health is less than or equal to ${value},如果实例健康小于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_18,If instance health is less than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例运行状况小于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_19,If instance health is greater than or equal to ${value},如果实例健康大于或等于 ${value} ,,GML Visual story text
GMStdIfHealth_Story_20,If instance health is greater than or equal to ${value} on ${applyto},如果 ${applyto} 上的实例运行状况大于或等于 ${value} ,,GML Visual story text
GMStdDebugShowMessage_Story_1,Show debug message ${msg}${show_input_count},显示调试消息 ${msg} ${show_input_count} ,,GML Visual story text
GMStdDebugShowMessage_Story_2,Show debug message ${msg} on ${applyto}${show_input_count},在 ${applyto}${show_input_count} 上显示调试消息 ${msg} ,,GML Visual story text
GMStdSetWindowState_Story_1,Toggle window state,切换窗口状态,,GML Visual story text
GMStdSetWindowState_Story_2,Set window state to window,将窗口状态设置为窗口,,GML Visual story text
GMStdSetWindowState_Story_3,Set window state to fullscreen,将窗口状态设置为全屏,,GML Visual story text
GMStdPartSystCreate_Story_1,Create a persistent particle system on layer ${layer} into ${var},将图层 ${layer} 上的永久粒子系统创建到 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_2,Create a persistent particle system on layer ${layer} into ${var} on ${applyto},将图层 ${layer} 上的永久粒子系统创建到 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_3,Create a persistent particle system on layer ${layer} into temp ${var},在图层 ${layer} 上将永久粒子系统创建到临时 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_4,Create a persistent particle system on layer ${layer} into temp ${var} on ${applyto},将图层 ${layer} 上的永久粒子系统创建到 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_5,Create a particle system on layer ${layer} into ${var},将图层 ${layer} 上的粒子系统创建到 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_6,Create a particle system on layer ${layer} into ${var} on ${applyto},将图层 ${layer} 上的粒子系统创建到 ${applyto} 上的 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_7,Create a particle system on layer ${layer} into temp ${var},将图层 ${layer} 上的粒子系统创建到临时 ${var} ,,GML Visual story text
GMStdPartSystCreate_Story_8,Create a particle system on layer ${layer} into temp ${var} on ${applyto},将图层 ${layer} 上的粒子系统创建到 ${applyto} 上的临时 ${var} ,,GML Visual story text
GMStdPartSystDestroy_Story_1,Destroy particle system ${system},销毁粒子系统 ${system} ,,GML Visual story text
GMStdPartSystDestroy_Story_2,Destroy particle system ${system} on ${applyto},销毁 ${applyto} 上的粒子系统 ${system} ,,GML Visual story text
GMStdPartSystClear_Story_1,Clear particle system ${system},清除粒子系统 ${system} ,,GML Visual story text
GMStdPartSystClear_Story_2,Clear particle system ${system} on ${applyto},清除 ${applyto} 上的粒子系统 ${system} ,,GML Visual story text
GMStdPauseParticles_Story_1,Resume particle system ${system},恢复粒子系统 ${system} ,,GML Visual story text
GMStdPauseParticles_Story_2,Resume particle system ${system} on ${applyto},在 ${applyto} 上恢复粒子系统 ${system} ,,GML Visual story text
GMStdPauseParticles_Story_3,Pause particle system ${system},暂停粒子系统 ${system} ,,GML Visual story text
GMStdPauseParticles_Story_4,Pause particle system ${system} on ${applyto},暂停 ${applyto} 上的粒子系统 ${system} ,,GML Visual story text
GMStdRefreshParticles_Story_1,Update particle system ${system},更新粒子系统 ${system} ,,GML Visual story text
GMStdRefreshParticles_Story_2,Update particle system ${system} on ${applyto},更新 ${applyto} 上的粒子系统 ${system} ,,GML Visual story text
GMStdPartTypeCreate_Story_1,Create a new blending particle type into ${var},将新的混合粒子类型创建到 ${var} 中,,GML Visual story text
GMStdPartTypeCreate_Story_2,Create a new blending particle type into ${var} on ${applyto},在 ${applyto} 上的 ${var} 中创建新的混合粒子类型,,GML Visual story text
GMStdPartTypeCreate_Story_3,Create a new blending particle type into temp ${var},在Temp ${var} 中创建新的混合粒子类型,,GML Visual story text
GMStdPartTypeCreate_Story_4,Create a new blending particle type into temp ${var} on ${applyto},在 ${applyto} 上的Temp ${var} 中创建新的混合粒子类型,,GML Visual story text
GMStdPartTypeCreate_Story_5,Create a new particle type into ${var},在 ${var} 中创建新的粒子类型,,GML Visual story text
GMStdPartTypeCreate_Story_6,Create a new particle type into ${var} on ${applyto},在 ${applyto} 上的 ${var} 中创建新粒子类型,,GML Visual story text
GMStdPartTypeCreate_Story_7,Create a new particle type into temp ${var},在临时 ${var} 中创建新的粒子类型,,GML Visual story text
GMStdPartTypeCreate_Story_8,Create a new particle type into temp ${var} on ${applyto},在 ${applyto} 上的Temp ${var} 中创建新的粒子类型,,GML Visual story text
GMStdPartTypeDestroy_Story_1,Destroy particle type ${type},销毁粒子类型 ${type} ,,GML Visual story text
GMStdPartTypeDestroy_Story_2,Destroy particle type ${type} on ${applyto},销毁 ${applyto} 上的粒子类型 ${type} ,,GML Visual story text
GMStdPartTypeSize_Story_1,Set size of particle type ${type} from min ${minsize} to max ${maxsize} with increase ${sizeincr} and wiggle ${wiggle},将粒子类型 ${type} 的大小从最小 ${minsize} 设置为最大 ${maxsize} ，并增加$(sizeincr}和wigger ${wigger} ,,GML Visual story text
GMStdPartTypeSize_Story_2,Set size of particle type ${type} from min ${minsize} to max ${maxsize} with increase ${sizeincr} and wiggle ${wiggle} on ${applyto},将粒子类型 ${type} 的大小从最小 ${minsize} 设置为最大 ${maxsize} ，并在 ${applyto} 上增加 $(sizeincr} 和wigger ${wiggle} ,,GML Visual story text
GMStdPartTypeSprite_Story_1,Set sprite of particle type ${type} to ${sprite},将粒子类型 ${type} 的精灵设置为 ${sprite} ,,GML Visual story text
GMStdPartTypeSprite_Story_2,Set sprite of particle type ${type} to ${sprite} on ${applyto},在 ${applyto} 上将粒子类型 ${type} 的精灵设置为 ${sprite} ,,GML Visual story text
GMStdPartTypeShape_Story_1,Set shape of particle type ${type} to ${shape},将粒子类型 ${type} 的形状设置为 ${shape} ,,GML Visual story text
GMStdPartTypeShape_Story_2,Set shape of particle type ${type} to ${shape} on ${applyto},在 ${applyto} 上将粒子类型 ${type} 的形状设置为 ${shape} ,,GML Visual story text
GMStdPartTypeColor_Story_1,"Set colour of particle type ${type} to start ${startcol}, mid ${midcol}, end ${endcol}","将粒子类型${type}的颜色设置为开始${startol}、中间${midol}、结束${endol}",,GML Visual story text
GMStdPartTypeColor_Story_2,"Set colour of particle type ${type} to start ${startcol}, mid ${midcol}, end ${endcol} on ${applyto}","在${applyto}上将粒子类型${type}的颜色设置为开始${startol}、中间${midol}、结束${endol}",,GML Visual story text
GMStdPartTypeAlpha_Story_1,"Set alpha channel of particle type ${type} to start ${start}, end ${end}","将粒子类型${type}的Alpha通道设置为开始${start}，结束${end}",,GML Visual story text
GMStdPartTypeAlpha_Story_2,"Set alpha channel of particle type ${type} to start ${start}, end ${end} on ${applyto}","将粒子类型${type}的Alpha通道设置为在${applyto}上开始${start}，结束${end}",,GML Visual story text
GMStdPartTypeAlpha_Story_3,"Set alpha channel of particle type ${type} to start ${start}, mid ${middle}, end ${end}","将粒子类型${type}的Alpha通道设置为开始${start}、中间${mediate}、结束${end}",,GML Visual story text
GMStdPartTypeAlpha_Story_4,"Set alpha channel of particle type ${type} to start ${start}, mid ${middle}, end ${end} on ${applyto}","将粒子类型${type}的Alpha通道设置为在${applyto}上开始${start}、中期${mediate}、结束${end}",,GML Visual story text
GMStdPartTypeLife_Story_1,Set life of particle type ${typ} from min ${minlife} to max ${maxlife},将粒子类型 ${typ} 的寿命设置为从最小 ${minlife} 到最大 ${maxlife} ,,GML Visual story text
GMStdPartTypeLife_Story_2,Set life of particle type ${typ} from min ${minlife} to max ${maxlife} on ${applyto},在 ${applyto} 上将粒子类型 ${typ} 的寿命从最小 ${minlife} 设置为最大 ${maxlife} ,,GML Visual story text
GMStdPartTypeSpeed_Story_1,Set speed of particle type ${type} from min ${minspeed} to max ${maxspeed} with increase ${incr} and wiggle ${wiggle},将粒子类型 ${type} 的速度从最小 ${minspeed} 设置为最大 ${maxspeed} ，并增加 $(incr} 和wigger ${wiggle} ,,GML Visual story text
GMStdPartTypeSpeed_Story_2,Set speed of particle type ${type} from min ${minspeed} to max ${maxspeed} with increase ${incr} and wiggle ${wiggle} on ${applyto},将粒子类型 ${type} 的速度从最小 ${minspeed} 设置为最大 ${maxspeed} ，并在 ${applyto} 上增加 $(incr} 和wigger ${wiggle} ,,GML Visual story text
GMStdPartTypeDirection_Story_1,Set direction of particle type ${type} from min ${mindir} to max ${maxdir} with rotation ${incr} and wiggle ${wiggle},设置粒子类型 ${type} 的方向，从最小 ${mindir} 到最大 ${maxdir} ，旋转 $(incr} 和摆动 ${wigger} ,,GML Visual story text
GMStdPartTypeDirection_Story_2,Set direction of particle type ${type} from min ${mindir} to max ${maxdir} with rotation ${incr} and wiggle ${wiggle} on ${applyto},在 ${applyto} 上设置粒子类型 ${type} 的方向，从最小 ${mindir} 到最大 ${maxdir} ，旋转 $(incr} 和摆动 ${wigger} ,,GML Visual story text
GMStdPartTypeOrientation_Story_1,Set relative orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle},将粒子类型 ${type} 的相对方向从最小 ${minangle} 设置为最大 ${maxangle} ，旋转 $(incr} 和摆动 ${wiggle} ,,GML Visual story text
GMStdPartTypeOrientation_Story_2,Set relative orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle} on ${applyto},将粒子类型 ${type} 的相对方向从最小 ${minangle} 设置为最大 ${maxangle} ，旋转 $(incr} )，并在 ${applyto} 上摆动 ${wiggle} ,,GML Visual story text
GMStdPartTypeOrientation_Story_3,Set orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle},将粒子类型 ${type} 的方向从最小 ${minangle} 设置为最大 ${maxangle} ，旋转 $(incr} 和摆动 ${wigger} ,,GML Visual story text
GMStdPartTypeOrientation_Story_4,Set orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle} on ${applyto},在 ${applyto} 上将粒子类型 ${type} 的方向从最小 ${minangle} 设置为最大 ${maxangle} ，并使用旋转 $(incr} 和摆动 ${wigger} 设置粒子类型 ${type} 的方向,,GML Visual story text
GMStdPartTypeGravity_Story_1,Set gravity of particle type ${type} to ${amount} in direction ${direction},将粒子类型 ${type} 的重力设置为 ${amount} ，方向为 ${direction} ,,GML Visual story text
GMStdPartTypeGravity_Story_2,Set gravity of particle type ${type} to ${amount} in direction ${direction} on ${applyto},在 ${applyto} 上将粒子类型 ${type} 的重力设置为 ${amount} ，方向为 ${direction} ,,GML Visual story text
GMStdPartTypeSecondary_Story_1,Create ${count} secondary particles from type ${type} of type ${secondary} per step,每步从类型 ${type} 的 ${secondary} 创建 ${count} 个次级粒子,,GML Visual story text
GMStdPartTypeSecondary_Story_2,Create ${count} secondary particles from type ${type} of type ${secondary} per step on ${applyto},在 ${applyto} 上的每个步骤中，从 ${type} 类型 ${secondary} 创建 ${count} 个次级粒子,,GML Visual story text
GMStdPartTypeSecondary_Story_3,Create ${count} secondary particles from type ${type} of type ${secondary} on death,从类型 ${type} 的 ${secondary} 在死亡时创建 ${count} 个次级粒子,,GML Visual story text
GMStdPartTypeSecondary_Story_4,Create ${count} secondary particles from type ${type} of type ${secondary} on death on ${applyto},在 ${applyto} 上死亡时，从 ${type} 类型 ${secondary} 创建 ${count} 次级粒子,,GML Visual story text
GMStdPartCreateBurst_Story_1,Burst ${number} particles of type ${type} in system ${system} at ${dnd_position},在系统 ${system} 的 ${dnd_position} 处爆发 ${number} 个 ${type} 类型的粒子,,GML Visual story text
GMStdPartCreateBurst_Story_2,Burst ${number} particles of type ${type} in system ${system} at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 处爆发系统 ${system} 中 ${type} 类型的 ${number} 个粒子,,GML Visual story text
GMStdPartEmitCreate_Story_1,Create a particle emitter in system ${system} into ${emitter},在系统 ${system} 中将粒子发射器创建到 ${emitter} 中,,GML Visual story text
GMStdPartEmitCreate_Story_2,Create a particle emitter in system ${system} into ${emitter} on ${applyto},将系统 ${system} 中的粒子发射器创建到 ${applyto} 上的 ${emitter} 中,,GML Visual story text
GMStdPartEmitCreate_Story_3,Create a particle emitter in system ${system} into temp ${emitter},在系统 ${system} 中将粒子发射器创建到临时 ${emitter} 中,,GML Visual story text
GMStdPartEmitCreate_Story_4,Create a particle emitter in system ${system} into temp ${emitter} on ${applyto},将系统 ${system} 中的粒子发射器创建到 ${applyto} 上的临时 ${emitter} 中,,GML Visual story text
GMStdPartEmitDestroy_Story_1,Destroy particle emitter ${emitter} in system ${system},销毁系统 ${system} 中的粒子发射器 ${emitter} ,,GML Visual story text
GMStdPartEmitDestroy_Story_2,Destroy particle emitter ${emitter} in system ${system} on ${applyto},销毁 ${applyto} 上系统 ${system} 中的粒子发射器 ${emitter} ,,GML Visual story text
GMStdPartEmitterEmit_Story_1,Burst ${number} particles of type ${type} from emitter ${emitter} in system ${system},从系统 ${system} 中的发射器 ${emitter} 爆发 ${type} 类型的 ${number} 粒子,,GML Visual story text
GMStdPartEmitterEmit_Story_2,Burst ${number} particles of type ${type} from emitter ${emitter} in system ${system} on ${applyto},从 ${applyto} 上系统 ${system} 中的发射器 ${emitter} 爆发 ${type} 类型的 ${number} 粒子,,GML Visual story text
GMStdPartEmitterEmit_Story_3,Stream ${number} particles of type ${type} from emitter ${emitter} in system ${system},来自系统 ${system} 中发射器 ${emitter} 的 ${type} 类型粒子流 ${number} ,,GML Visual story text
GMStdPartEmitterEmit_Story_4,Stream ${number} particles of type ${type} from emitter ${emitter} in system ${system} on ${applyto},从 ${applyto} 上系统 ${system} 中的发射器 ${emitter} 流式传输 ${type} 类型的 ${number} 粒子,,GML Visual story text
GMStdPartEmitRegion_Story_1,Emit from ${emitter} in system ${system} in a rectangular shape with linear distribution,从系统 ${system} 中的 ${emitter} 发射呈线性分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_2,Emit from ${emitter} in system ${system} in a rectangular shape with linear distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈矩形，在 ${applyto} 上呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_3,Emit from ${emitter} in system ${system} in a rectangular shape with gaussian distribution,从系统 ${system} 中的 ${emitter} 发射，呈高斯分布的矩形,,GML Visual story text
GMStdPartEmitRegion_Story_4,Emit from ${emitter} in system ${system} in a rectangular shape with gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈矩形，在 ${applyto} 上呈高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_5,Emit from ${emitter} in system ${system} in a rectangular shape with inverse gaussian distribution,从系统 ${system} 中的 ${emitter} 发射，呈矩形，呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_6,Emit from ${emitter} in system ${system} in a rectangular shape with inverse gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈矩形，在 ${applyto} 上呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_7,Emit from ${emitter} in system ${system} in a elliptical shape with linear distribution,从系统 ${system} 中的 ${emitter} 发射呈线性分布的椭圆形,,GML Visual story text
GMStdPartEmitRegion_Story_8,Emit from ${emitter} in system ${system} in a elliptical shape with linear distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈椭圆形，在 ${applyto} 上呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_9,Emit from ${emitter} in system ${system} in a elliptical shape with gaussian distribution,从系统 ${system} 中的 ${emitter} 发射，呈椭圆形，呈高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_10,Emit from ${emitter} in system ${system} in a elliptical shape with gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈椭圆形，在 ${applyto} 上呈高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_11,Emit from ${emitter} in system ${system} in a elliptical shape with inverse gaussian distribution,从系统 ${system} 中的 ${emitter} 发射，呈椭圆形，呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_12,Emit from ${emitter} in system ${system} in a elliptical shape with inverse gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈椭圆形，在 ${applyto} 上呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_13,Emit from ${emitter} in system ${system} in a diamond shape with linear distribution,从系统 ${system} 中的 ${emitter} 发射，呈菱形，呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_14,Emit from ${emitter} in system ${system} in a diamond shape with linear distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈菱形，在 ${applyto} 上呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_15,Emit from ${emitter} in system ${system} in a diamond shape with gaussian distribution,从系统 ${system} 中的 ${emitter} 发射，呈高斯分布的菱形,,GML Visual story text
GMStdPartEmitRegion_Story_16,Emit from ${emitter} in system ${system} in a diamond shape with gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈菱形，在 ${applyto} 上呈高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_17,Emit from ${emitter} in system ${system} in a diamond shape with inverse gaussian distribution,从系统 ${system} 中的 ${emitter} 发射，呈菱形，呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_18,Emit from ${emitter} in system ${system} in a diamond shape with inverse gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 发射，呈菱形，在 ${applyto} 上呈逆高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_19,Emit from ${emitter} in system ${system} in a straight line with linear distribution,从系统 ${system} 中的 ${emitter} 以线性分布的直线发射,,GML Visual story text
GMStdPartEmitRegion_Story_20,Emit from ${emitter} in system ${system} in a straight line with linear distribution on ${applyto},从系统 ${system} 中的 ${emitter} 以直线形式发射，在 ${applyto} 上呈线性分布,,GML Visual story text
GMStdPartEmitRegion_Story_21,Emit from ${emitter} in system ${system} in a straight line with gaussian distribution,从系统 ${system} 中的 ${emitter} 以高斯分布直线发射,,GML Visual story text
GMStdPartEmitRegion_Story_22,Emit from ${emitter} in system ${system} in a straight line with gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 以直线发射，在 ${applyto} 上呈高斯分布,,GML Visual story text
GMStdPartEmitRegion_Story_23,Emit from ${emitter} in system ${system} in a straight line with inverse gaussian distribution,从系统 ${system} 中的 ${emitter} 以反高斯分布直线发射,,GML Visual story text
GMStdPartEmitRegion_Story_24,Emit from ${emitter} in system ${system} in a straight line with inverse gaussian distribution on ${applyto},从系统 ${system} 中的 ${emitter} 以直线发射，在 ${applyto} 上呈逆高斯分布,,GML Visual story text
GMStdEffect_Story_1,Show effect at ${dnd_position},在 ${dnd_position} 显示效果,,GML Visual story text
GMStdEffect_Story_2,Show effect at ${dnd_position} on ${applyto},在 ${applyto} 上的 ${dnd_position} 显示效果,,GML Visual story text
GMStdConstructor,Constructor,构造函数,,GML Visual function label for constructor
GMStdStatic,Static,静态,,GML Visual function label for static
GMStdTemp,Temp,临时,,GML Visual function label for temp
GMStdDeclFunction_Desc,Declare a new function,声明新函数,,GML Visual declare a new function
GMStdDeclFunction_Name,Declare A New Function,声明一个新函数,,GML Visual declare a new function
GMStdDeclFunction_Story,Declare a new function ${funcName},声明新函数 ${funcName},,GML Visual declare a new function
